/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 273.0, "minX": 0.0, "maxY": 25134.0, "series": [{"data": [[0.0, 301.0], [0.1, 302.0], [0.2, 307.0], [0.3, 309.0], [0.4, 312.0], [0.5, 314.0], [0.6, 315.0], [0.7, 317.0], [0.8, 494.0], [0.9, 498.0], [1.0, 534.0], [1.1, 543.0], [1.2, 560.0], [1.3, 570.0], [1.4, 590.0], [1.5, 652.0], [1.6, 735.0], [1.7, 768.0], [1.8, 786.0], [1.9, 788.0], [2.0, 791.0], [2.1, 827.0], [2.2, 831.0], [2.3, 877.0], [2.4, 934.0], [2.5, 1025.0], [2.6, 1049.0], [2.7, 1090.0], [2.8, 1167.0], [2.9, 1190.0], [3.0, 1232.0], [3.1, 1313.0], [3.2, 1336.0], [3.3, 1396.0], [3.4, 1461.0], [3.5, 1515.0], [3.6, 1545.0], [3.7, 1570.0], [3.8, 1613.0], [3.9, 1660.0], [4.0, 1742.0], [4.1, 1784.0], [4.2, 1792.0], [4.3, 1797.0], [4.4, 1838.0], [4.5, 1948.0], [4.6, 1958.0], [4.7, 1968.0], [4.8, 1993.0], [4.9, 2026.0], [5.0, 2029.0], [5.1, 2042.0], [5.2, 2288.0], [5.3, 2289.0], [5.4, 2290.0], [5.5, 2290.0], [5.6, 2291.0], [5.7, 2292.0], [5.8, 2292.0], [5.9, 2293.0], [6.0, 2294.0], [6.1, 2294.0], [6.2, 2294.0], [6.3, 2294.0], [6.4, 2295.0], [6.5, 2295.0], [6.6, 2295.0], [6.7, 2295.0], [6.8, 2295.0], [6.9, 2296.0], [7.0, 2296.0], [7.1, 2296.0], [7.2, 2296.0], [7.3, 2296.0], [7.4, 2297.0], [7.5, 2297.0], [7.6, 2297.0], [7.7, 2297.0], [7.8, 2297.0], [7.9, 2297.0], [8.0, 2297.0], [8.1, 2297.0], [8.2, 2297.0], [8.3, 2298.0], [8.4, 2298.0], [8.5, 2298.0], [8.6, 2298.0], [8.7, 2298.0], [8.8, 2298.0], [8.9, 2298.0], [9.0, 2298.0], [9.1, 2298.0], [9.2, 2298.0], [9.3, 2299.0], [9.4, 2299.0], [9.5, 2299.0], [9.6, 2299.0], [9.7, 2299.0], [9.8, 2299.0], [9.9, 2299.0], [10.0, 2299.0], [10.1, 2299.0], [10.2, 2299.0], [10.3, 2300.0], [10.4, 2300.0], [10.5, 2300.0], [10.6, 2300.0], [10.7, 2300.0], [10.8, 2300.0], [10.9, 2300.0], [11.0, 2300.0], [11.1, 2300.0], [11.2, 2301.0], [11.3, 2301.0], [11.4, 2301.0], [11.5, 2301.0], [11.6, 2301.0], [11.7, 2301.0], [11.8, 2301.0], [11.9, 2301.0], [12.0, 2301.0], [12.1, 2301.0], [12.2, 2301.0], [12.3, 2301.0], [12.4, 2301.0], [12.5, 2301.0], [12.6, 2301.0], [12.7, 2301.0], [12.8, 2302.0], [12.9, 2302.0], [13.0, 2302.0], [13.1, 2302.0], [13.2, 2302.0], [13.3, 2302.0], [13.4, 2302.0], [13.5, 2302.0], [13.6, 2302.0], [13.7, 2302.0], [13.8, 2302.0], [13.9, 2303.0], [14.0, 2303.0], [14.1, 2303.0], [14.2, 2303.0], [14.3, 2303.0], [14.4, 2303.0], [14.5, 2304.0], [14.6, 2304.0], [14.7, 2304.0], [14.8, 2304.0], [14.9, 2304.0], [15.0, 2304.0], [15.1, 2304.0], [15.2, 2305.0], [15.3, 2305.0], [15.4, 2305.0], [15.5, 2305.0], [15.6, 2305.0], [15.7, 2305.0], [15.8, 2305.0], [15.9, 2305.0], [16.0, 2306.0], [16.1, 2306.0], [16.2, 2306.0], [16.3, 2306.0], [16.4, 2306.0], [16.5, 2307.0], [16.6, 2307.0], [16.7, 2307.0], [16.8, 2307.0], [16.9, 2307.0], [17.0, 2307.0], [17.1, 2308.0], [17.2, 2308.0], [17.3, 2308.0], [17.4, 2309.0], [17.5, 2309.0], [17.6, 2309.0], [17.7, 2309.0], [17.8, 2309.0], [17.9, 2310.0], [18.0, 2311.0], [18.1, 2311.0], [18.2, 2312.0], [18.3, 2312.0], [18.4, 2313.0], [18.5, 2314.0], [18.6, 2315.0], [18.7, 2315.0], [18.8, 2315.0], [18.9, 2316.0], [19.0, 2317.0], [19.1, 2320.0], [19.2, 2326.0], [19.3, 2340.0], [19.4, 2404.0], [19.5, 2453.0], [19.6, 2458.0], [19.7, 2459.0], [19.8, 2459.0], [19.9, 2460.0], [20.0, 2460.0], [20.1, 2460.0], [20.2, 2461.0], [20.3, 2462.0], [20.4, 2463.0], [20.5, 2464.0], [20.6, 2464.0], [20.7, 2464.0], [20.8, 2465.0], [20.9, 2465.0], [21.0, 2466.0], [21.1, 2466.0], [21.2, 2467.0], [21.3, 2467.0], [21.4, 2467.0], [21.5, 2467.0], [21.6, 2467.0], [21.7, 2468.0], [21.8, 2468.0], [21.9, 2468.0], [22.0, 2468.0], [22.1, 2468.0], [22.2, 2468.0], [22.3, 2469.0], [22.4, 2469.0], [22.5, 2469.0], [22.6, 2469.0], [22.7, 2469.0], [22.8, 2469.0], [22.9, 2469.0], [23.0, 2469.0], [23.1, 2469.0], [23.2, 2470.0], [23.3, 2470.0], [23.4, 2470.0], [23.5, 2471.0], [23.6, 2471.0], [23.7, 2471.0], [23.8, 2471.0], [23.9, 2471.0], [24.0, 2471.0], [24.1, 2471.0], [24.2, 2471.0], [24.3, 2472.0], [24.4, 2472.0], [24.5, 2472.0], [24.6, 2472.0], [24.7, 2472.0], [24.8, 2473.0], [24.9, 2473.0], [25.0, 2473.0], [25.1, 2474.0], [25.2, 2474.0], [25.3, 2475.0], [25.4, 2475.0], [25.5, 2475.0], [25.6, 2475.0], [25.7, 2475.0], [25.8, 2475.0], [25.9, 2475.0], [26.0, 2476.0], [26.1, 2476.0], [26.2, 2476.0], [26.3, 2476.0], [26.4, 2477.0], [26.5, 2477.0], [26.6, 2477.0], [26.7, 2477.0], [26.8, 2478.0], [26.9, 2478.0], [27.0, 2478.0], [27.1, 2479.0], [27.2, 2479.0], [27.3, 2479.0], [27.4, 2480.0], [27.5, 2480.0], [27.6, 2480.0], [27.7, 2481.0], [27.8, 2481.0], [27.9, 2481.0], [28.0, 2481.0], [28.1, 2481.0], [28.2, 2481.0], [28.3, 2482.0], [28.4, 2482.0], [28.5, 2483.0], [28.6, 2483.0], [28.7, 2483.0], [28.8, 2484.0], [28.9, 2484.0], [29.0, 2485.0], [29.1, 2486.0], [29.2, 2487.0], [29.3, 2488.0], [29.4, 2489.0], [29.5, 2491.0], [29.6, 2492.0], [29.7, 2495.0], [29.8, 2495.0], [29.9, 2497.0], [30.0, 2498.0], [30.1, 2498.0], [30.2, 2499.0], [30.3, 2502.0], [30.4, 2504.0], [30.5, 2507.0], [30.6, 2508.0], [30.7, 2511.0], [30.8, 2514.0], [30.9, 2518.0], [31.0, 2519.0], [31.1, 2521.0], [31.2, 2522.0], [31.3, 2522.0], [31.4, 2523.0], [31.5, 2523.0], [31.6, 2523.0], [31.7, 2523.0], [31.8, 2524.0], [31.9, 2524.0], [32.0, 2524.0], [32.1, 2526.0], [32.2, 2526.0], [32.3, 2526.0], [32.4, 2526.0], [32.5, 2526.0], [32.6, 2527.0], [32.7, 2527.0], [32.8, 2527.0], [32.9, 2528.0], [33.0, 2528.0], [33.1, 2529.0], [33.2, 2529.0], [33.3, 2529.0], [33.4, 2529.0], [33.5, 2529.0], [33.6, 2529.0], [33.7, 2530.0], [33.8, 2530.0], [33.9, 2530.0], [34.0, 2530.0], [34.1, 2530.0], [34.2, 2530.0], [34.3, 2531.0], [34.4, 2531.0], [34.5, 2531.0], [34.6, 2531.0], [34.7, 2531.0], [34.8, 2531.0], [34.9, 2532.0], [35.0, 2532.0], [35.1, 2532.0], [35.2, 2532.0], [35.3, 2532.0], [35.4, 2532.0], [35.5, 2532.0], [35.6, 2532.0], [35.7, 2532.0], [35.8, 2533.0], [35.9, 2533.0], [36.0, 2533.0], [36.1, 2533.0], [36.2, 2533.0], [36.3, 2533.0], [36.4, 2533.0], [36.5, 2533.0], [36.6, 2533.0], [36.7, 2533.0], [36.8, 2534.0], [36.9, 2534.0], [37.0, 2534.0], [37.1, 2534.0], [37.2, 2534.0], [37.3, 2534.0], [37.4, 2534.0], [37.5, 2534.0], [37.6, 2534.0], [37.7, 2535.0], [37.8, 2535.0], [37.9, 2535.0], [38.0, 2535.0], [38.1, 2535.0], [38.2, 2535.0], [38.3, 2535.0], [38.4, 2536.0], [38.5, 2536.0], [38.6, 2536.0], [38.7, 2536.0], [38.8, 2536.0], [38.9, 2536.0], [39.0, 2537.0], [39.1, 2537.0], [39.2, 2537.0], [39.3, 2537.0], [39.4, 2537.0], [39.5, 2537.0], [39.6, 2537.0], [39.7, 2537.0], [39.8, 2538.0], [39.9, 2538.0], [40.0, 2538.0], [40.1, 2538.0], [40.2, 2538.0], [40.3, 2538.0], [40.4, 2538.0], [40.5, 2538.0], [40.6, 2538.0], [40.7, 2538.0], [40.8, 2538.0], [40.9, 2539.0], [41.0, 2539.0], [41.1, 2539.0], [41.2, 2539.0], [41.3, 2539.0], [41.4, 2539.0], [41.5, 2539.0], [41.6, 2539.0], [41.7, 2539.0], [41.8, 2539.0], [41.9, 2539.0], [42.0, 2539.0], [42.1, 2540.0], [42.2, 2540.0], [42.3, 2540.0], [42.4, 2540.0], [42.5, 2540.0], [42.6, 2540.0], [42.7, 2540.0], [42.8, 2540.0], [42.9, 2540.0], [43.0, 2540.0], [43.1, 2540.0], [43.2, 2541.0], [43.3, 2541.0], [43.4, 2541.0], [43.5, 2541.0], [43.6, 2541.0], [43.7, 2541.0], [43.8, 2541.0], [43.9, 2541.0], [44.0, 2541.0], [44.1, 2541.0], [44.2, 2541.0], [44.3, 2541.0], [44.4, 2541.0], [44.5, 2541.0], [44.6, 2541.0], [44.7, 2542.0], [44.8, 2542.0], [44.9, 2542.0], [45.0, 2542.0], [45.1, 2542.0], [45.2, 2542.0], [45.3, 2542.0], [45.4, 2542.0], [45.5, 2542.0], [45.6, 2543.0], [45.7, 2543.0], [45.8, 2543.0], [45.9, 2543.0], [46.0, 2543.0], [46.1, 2543.0], [46.2, 2543.0], [46.3, 2543.0], [46.4, 2543.0], [46.5, 2543.0], [46.6, 2544.0], [46.7, 2544.0], [46.8, 2544.0], [46.9, 2544.0], [47.0, 2545.0], [47.1, 2545.0], [47.2, 2545.0], [47.3, 2545.0], [47.4, 2545.0], [47.5, 2545.0], [47.6, 2545.0], [47.7, 2545.0], [47.8, 2545.0], [47.9, 2546.0], [48.0, 2546.0], [48.1, 2546.0], [48.2, 2546.0], [48.3, 2546.0], [48.4, 2546.0], [48.5, 2546.0], [48.6, 2546.0], [48.7, 2546.0], [48.8, 2546.0], [48.9, 2547.0], [49.0, 2547.0], [49.1, 2547.0], [49.2, 2547.0], [49.3, 2547.0], [49.4, 2547.0], [49.5, 2548.0], [49.6, 2548.0], [49.7, 2548.0], [49.8, 2548.0], [49.9, 2548.0], [50.0, 2548.0], [50.1, 2548.0], [50.2, 2548.0], [50.3, 2548.0], [50.4, 2549.0], [50.5, 2549.0], [50.6, 2549.0], [50.7, 2549.0], [50.8, 2549.0], [50.9, 2549.0], [51.0, 2549.0], [51.1, 2549.0], [51.2, 2550.0], [51.3, 2550.0], [51.4, 2550.0], [51.5, 2550.0], [51.6, 2550.0], [51.7, 2550.0], [51.8, 2550.0], [51.9, 2550.0], [52.0, 2550.0], [52.1, 2551.0], [52.2, 2551.0], [52.3, 2551.0], [52.4, 2551.0], [52.5, 2551.0], [52.6, 2551.0], [52.7, 2551.0], [52.8, 2552.0], [52.9, 2552.0], [53.0, 2552.0], [53.1, 2552.0], [53.2, 2552.0], [53.3, 2552.0], [53.4, 2552.0], [53.5, 2552.0], [53.6, 2552.0], [53.7, 2553.0], [53.8, 2553.0], [53.9, 2553.0], [54.0, 2553.0], [54.1, 2554.0], [54.2, 2554.0], [54.3, 2554.0], [54.4, 2554.0], [54.5, 2554.0], [54.6, 2554.0], [54.7, 2555.0], [54.8, 2555.0], [54.9, 2555.0], [55.0, 2555.0], [55.1, 2555.0], [55.2, 2556.0], [55.3, 2556.0], [55.4, 2556.0], [55.5, 2556.0], [55.6, 2556.0], [55.7, 2556.0], [55.8, 2557.0], [55.9, 2557.0], [56.0, 2557.0], [56.1, 2557.0], [56.2, 2558.0], [56.3, 2558.0], [56.4, 2558.0], [56.5, 2558.0], [56.6, 2558.0], [56.7, 2559.0], [56.8, 2559.0], [56.9, 2559.0], [57.0, 2560.0], [57.1, 2561.0], [57.2, 2561.0], [57.3, 2561.0], [57.4, 2562.0], [57.5, 2562.0], [57.6, 2562.0], [57.7, 2562.0], [57.8, 2563.0], [57.9, 2563.0], [58.0, 2564.0], [58.1, 2565.0], [58.2, 2565.0], [58.3, 2566.0], [58.4, 2566.0], [58.5, 2566.0], [58.6, 2566.0], [58.7, 2567.0], [58.8, 2567.0], [58.9, 2568.0], [59.0, 2569.0], [59.1, 2569.0], [59.2, 2570.0], [59.3, 2571.0], [59.4, 2574.0], [59.5, 2574.0], [59.6, 2575.0], [59.7, 2580.0], [59.8, 2583.0], [59.9, 2585.0], [60.0, 2589.0], [60.1, 2591.0], [60.2, 2597.0], [60.3, 2609.0], [60.4, 2624.0], [60.5, 2631.0], [60.6, 2632.0], [60.7, 2636.0], [60.8, 2637.0], [60.9, 2658.0], [61.0, 2671.0], [61.1, 2690.0], [61.2, 2691.0], [61.3, 2692.0], [61.4, 2692.0], [61.5, 2692.0], [61.6, 2693.0], [61.7, 2694.0], [61.8, 2694.0], [61.9, 2695.0], [62.0, 2695.0], [62.1, 2695.0], [62.2, 2695.0], [62.3, 2696.0], [62.4, 2696.0], [62.5, 2697.0], [62.6, 2697.0], [62.7, 2697.0], [62.8, 2698.0], [62.9, 2699.0], [63.0, 2699.0], [63.1, 2700.0], [63.2, 2700.0], [63.3, 2700.0], [63.4, 2700.0], [63.5, 2701.0], [63.6, 2701.0], [63.7, 2701.0], [63.8, 2701.0], [63.9, 2702.0], [64.0, 2702.0], [64.1, 2702.0], [64.2, 2702.0], [64.3, 2702.0], [64.4, 2702.0], [64.5, 2703.0], [64.6, 2703.0], [64.7, 2703.0], [64.8, 2703.0], [64.9, 2703.0], [65.0, 2704.0], [65.1, 2704.0], [65.2, 2704.0], [65.3, 2704.0], [65.4, 2704.0], [65.5, 2705.0], [65.6, 2705.0], [65.7, 2705.0], [65.8, 2705.0], [65.9, 2706.0], [66.0, 2706.0], [66.1, 2706.0], [66.2, 2706.0], [66.3, 2706.0], [66.4, 2706.0], [66.5, 2706.0], [66.6, 2706.0], [66.7, 2706.0], [66.8, 2707.0], [66.9, 2707.0], [67.0, 2707.0], [67.1, 2707.0], [67.2, 2707.0], [67.3, 2707.0], [67.4, 2707.0], [67.5, 2707.0], [67.6, 2707.0], [67.7, 2708.0], [67.8, 2708.0], [67.9, 2708.0], [68.0, 2708.0], [68.1, 2708.0], [68.2, 2708.0], [68.3, 2708.0], [68.4, 2709.0], [68.5, 2709.0], [68.6, 2709.0], [68.7, 2709.0], [68.8, 2709.0], [68.9, 2709.0], [69.0, 2709.0], [69.1, 2709.0], [69.2, 2710.0], [69.3, 2710.0], [69.4, 2710.0], [69.5, 2710.0], [69.6, 2710.0], [69.7, 2710.0], [69.8, 2710.0], [69.9, 2710.0], [70.0, 2710.0], [70.1, 2711.0], [70.2, 2711.0], [70.3, 2711.0], [70.4, 2711.0], [70.5, 2711.0], [70.6, 2711.0], [70.7, 2712.0], [70.8, 2712.0], [70.9, 2712.0], [71.0, 2712.0], [71.1, 2712.0], [71.2, 2713.0], [71.3, 2713.0], [71.4, 2713.0], [71.5, 2713.0], [71.6, 2713.0], [71.7, 2713.0], [71.8, 2713.0], [71.9, 2713.0], [72.0, 2713.0], [72.1, 2713.0], [72.2, 2714.0], [72.3, 2714.0], [72.4, 2714.0], [72.5, 2714.0], [72.6, 2714.0], [72.7, 2715.0], [72.8, 2715.0], [72.9, 2715.0], [73.0, 2715.0], [73.1, 2715.0], [73.2, 2715.0], [73.3, 2715.0], [73.4, 2716.0], [73.5, 2716.0], [73.6, 2716.0], [73.7, 2716.0], [73.8, 2716.0], [73.9, 2716.0], [74.0, 2716.0], [74.1, 2717.0], [74.2, 2717.0], [74.3, 2717.0], [74.4, 2717.0], [74.5, 2718.0], [74.6, 2718.0], [74.7, 2718.0], [74.8, 2718.0], [74.9, 2718.0], [75.0, 2718.0], [75.1, 2718.0], [75.2, 2718.0], [75.3, 2718.0], [75.4, 2719.0], [75.5, 2719.0], [75.6, 2719.0], [75.7, 2719.0], [75.8, 2719.0], [75.9, 2720.0], [76.0, 2720.0], [76.1, 2720.0], [76.2, 2720.0], [76.3, 2720.0], [76.4, 2720.0], [76.5, 2720.0], [76.6, 2721.0], [76.7, 2721.0], [76.8, 2721.0], [76.9, 2721.0], [77.0, 2721.0], [77.1, 2722.0], [77.2, 2722.0], [77.3, 2722.0], [77.4, 2722.0], [77.5, 2722.0], [77.6, 2722.0], [77.7, 2722.0], [77.8, 2722.0], [77.9, 2722.0], [78.0, 2723.0], [78.1, 2723.0], [78.2, 2723.0], [78.3, 2723.0], [78.4, 2723.0], [78.5, 2723.0], [78.6, 2724.0], [78.7, 2724.0], [78.8, 2724.0], [78.9, 2724.0], [79.0, 2724.0], [79.1, 2724.0], [79.2, 2725.0], [79.3, 2725.0], [79.4, 2725.0], [79.5, 2725.0], [79.6, 2725.0], [79.7, 2726.0], [79.8, 2726.0], [79.9, 2726.0], [80.0, 2726.0], [80.1, 2726.0], [80.2, 2727.0], [80.3, 2727.0], [80.4, 2727.0], [80.5, 2727.0], [80.6, 2727.0], [80.7, 2727.0], [80.8, 2727.0], [80.9, 2728.0], [81.0, 2728.0], [81.1, 2728.0], [81.2, 2729.0], [81.3, 2729.0], [81.4, 2729.0], [81.5, 2729.0], [81.6, 2729.0], [81.7, 2730.0], [81.8, 2730.0], [81.9, 2730.0], [82.0, 2730.0], [82.1, 2730.0], [82.2, 2730.0], [82.3, 2730.0], [82.4, 2731.0], [82.5, 2731.0], [82.6, 2731.0], [82.7, 2731.0], [82.8, 2731.0], [82.9, 2732.0], [83.0, 2732.0], [83.1, 2732.0], [83.2, 2733.0], [83.3, 2733.0], [83.4, 2733.0], [83.5, 2734.0], [83.6, 2734.0], [83.7, 2734.0], [83.8, 2735.0], [83.9, 2735.0], [84.0, 2735.0], [84.1, 2736.0], [84.2, 2736.0], [84.3, 2737.0], [84.4, 2737.0], [84.5, 2738.0], [84.6, 2739.0], [84.7, 2740.0], [84.8, 2740.0], [84.9, 2740.0], [85.0, 2741.0], [85.1, 2741.0], [85.2, 2741.0], [85.3, 2742.0], [85.4, 2743.0], [85.5, 2744.0], [85.6, 2745.0], [85.7, 2746.0], [85.8, 2747.0], [85.9, 2747.0], [86.0, 2749.0], [86.1, 2749.0], [86.2, 2752.0], [86.3, 2752.0], [86.4, 2752.0], [86.5, 2753.0], [86.6, 2753.0], [86.7, 2755.0], [86.8, 2757.0], [86.9, 2757.0], [87.0, 2759.0], [87.1, 2759.0], [87.2, 2762.0], [87.3, 2766.0], [87.4, 2768.0], [87.5, 2769.0], [87.6, 2770.0], [87.7, 2781.0], [87.8, 2785.0], [87.9, 2798.0], [88.0, 2801.0], [88.1, 2804.0], [88.2, 2809.0], [88.3, 2820.0], [88.4, 2823.0], [88.5, 2834.0], [88.6, 2842.0], [88.7, 2867.0], [88.8, 2915.0], [88.9, 2938.0], [89.0, 3551.0], [89.1, 3564.0], [89.2, 3566.0], [89.3, 3571.0], [89.4, 3576.0], [89.5, 3581.0], [89.6, 3582.0], [89.7, 3586.0], [89.8, 3587.0], [89.9, 3589.0], [90.0, 3595.0], [90.1, 3595.0], [90.2, 3600.0], [90.3, 3602.0], [90.4, 3627.0], [90.5, 3720.0], [90.6, 3750.0], [90.7, 3756.0], [90.8, 3763.0], [90.9, 3770.0], [91.0, 3778.0], [91.1, 3782.0], [91.2, 3925.0], [91.3, 5588.0], [91.4, 5598.0], [91.5, 5601.0], [91.6, 5602.0], [91.7, 5620.0], [91.8, 5621.0], [91.9, 5623.0], [92.0, 5627.0], [92.1, 5630.0], [92.2, 5633.0], [92.3, 5637.0], [92.4, 5644.0], [92.5, 5659.0], [92.6, 5750.0], [92.7, 5769.0], [92.8, 5771.0], [92.9, 5781.0], [93.0, 5788.0], [93.1, 5792.0], [93.2, 5796.0], [93.3, 5797.0], [93.4, 5800.0], [93.5, 5810.0], [93.6, 5814.0], [93.7, 5818.0], [93.8, 5818.0], [93.9, 5827.0], [94.0, 5904.0], [94.1, 5952.0], [94.2, 9619.0], [94.3, 9632.0], [94.4, 9636.0], [94.5, 9654.0], [94.6, 9662.0], [94.7, 9666.0], [94.8, 9673.0], [94.9, 9679.0], [95.0, 9790.0], [95.1, 9797.0], [95.2, 9803.0], [95.3, 9814.0], [95.4, 9824.0], [95.5, 9826.0], [95.6, 9831.0], [95.7, 9835.0], [95.8, 9839.0], [95.9, 9842.0], [96.0, 9847.0], [96.1, 9873.0], [96.2, 15789.0], [96.3, 15954.0], [96.4, 16049.0], [96.5, 16142.0], [96.6, 17556.0], [96.7, 17646.0], [96.8, 17732.0], [96.9, 17750.0], [97.0, 17800.0], [97.1, 17821.0], [97.2, 17854.0], [97.3, 17863.0], [97.4, 17879.0], [97.5, 17882.0], [97.6, 17882.0], [97.7, 17920.0], [97.8, 17932.0], [97.9, 17941.0], [98.0, 17951.0], [98.1, 17969.0], [98.2, 18005.0], [98.3, 18015.0], [98.4, 18031.0], [98.5, 18052.0], [98.6, 18057.0], [98.7, 18078.0], [98.8, 18118.0], [98.9, 18167.0], [99.0, 18186.0], [99.1, 18212.0], [99.2, 18226.0], [99.3, 18235.0], [99.4, 18289.0], [99.5, 18306.0], [99.6, 18322.0], [99.7, 18347.0], [99.8, 18450.0], [99.9, 20786.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 273.0], [0.1, 273.0], [0.2, 274.0], [0.3, 274.0], [0.4, 274.0], [0.5, 275.0], [0.6, 275.0], [0.7, 276.0], [0.8, 276.0], [0.9, 276.0], [1.0, 276.0], [1.1, 276.0], [1.2, 276.0], [1.3, 276.0], [1.4, 276.0], [1.5, 276.0], [1.6, 277.0], [1.7, 277.0], [1.8, 277.0], [1.9, 277.0], [2.0, 277.0], [2.1, 277.0], [2.2, 277.0], [2.3, 277.0], [2.4, 277.0], [2.5, 277.0], [2.6, 277.0], [2.7, 277.0], [2.8, 277.0], [2.9, 278.0], [3.0, 278.0], [3.1, 278.0], [3.2, 278.0], [3.3, 278.0], [3.4, 278.0], [3.5, 278.0], [3.6, 278.0], [3.7, 278.0], [3.8, 278.0], [3.9, 278.0], [4.0, 278.0], [4.1, 278.0], [4.2, 278.0], [4.3, 278.0], [4.4, 278.0], [4.5, 278.0], [4.6, 278.0], [4.7, 278.0], [4.8, 278.0], [4.9, 278.0], [5.0, 278.0], [5.1, 278.0], [5.2, 278.0], [5.3, 279.0], [5.4, 279.0], [5.5, 279.0], [5.6, 279.0], [5.7, 279.0], [5.8, 279.0], [5.9, 279.0], [6.0, 279.0], [6.1, 279.0], [6.2, 279.0], [6.3, 279.0], [6.4, 279.0], [6.5, 279.0], [6.6, 279.0], [6.7, 279.0], [6.8, 279.0], [6.9, 279.0], [7.0, 279.0], [7.1, 279.0], [7.2, 279.0], [7.3, 279.0], [7.4, 279.0], [7.5, 279.0], [7.6, 279.0], [7.7, 279.0], [7.8, 279.0], [7.9, 279.0], [8.0, 279.0], [8.1, 279.0], [8.2, 279.0], [8.3, 279.0], [8.4, 279.0], [8.5, 279.0], [8.6, 280.0], [8.7, 280.0], [8.8, 280.0], [8.9, 280.0], [9.0, 280.0], [9.1, 280.0], [9.2, 280.0], [9.3, 280.0], [9.4, 280.0], [9.5, 280.0], [9.6, 280.0], [9.7, 280.0], [9.8, 280.0], [9.9, 280.0], [10.0, 280.0], [10.1, 280.0], [10.2, 280.0], [10.3, 280.0], [10.4, 280.0], [10.5, 280.0], [10.6, 280.0], [10.7, 280.0], [10.8, 280.0], [10.9, 280.0], [11.0, 280.0], [11.1, 280.0], [11.2, 280.0], [11.3, 280.0], [11.4, 280.0], [11.5, 280.0], [11.6, 280.0], [11.7, 280.0], [11.8, 280.0], [11.9, 280.0], [12.0, 280.0], [12.1, 280.0], [12.2, 280.0], [12.3, 281.0], [12.4, 281.0], [12.5, 281.0], [12.6, 281.0], [12.7, 281.0], [12.8, 281.0], [12.9, 281.0], [13.0, 281.0], [13.1, 281.0], [13.2, 281.0], [13.3, 281.0], [13.4, 281.0], [13.5, 281.0], [13.6, 281.0], [13.7, 281.0], [13.8, 281.0], [13.9, 281.0], [14.0, 281.0], [14.1, 281.0], [14.2, 281.0], [14.3, 281.0], [14.4, 281.0], [14.5, 281.0], [14.6, 281.0], [14.7, 281.0], [14.8, 281.0], [14.9, 281.0], [15.0, 281.0], [15.1, 281.0], [15.2, 281.0], [15.3, 281.0], [15.4, 281.0], [15.5, 281.0], [15.6, 281.0], [15.7, 281.0], [15.8, 282.0], [15.9, 282.0], [16.0, 282.0], [16.1, 282.0], [16.2, 282.0], [16.3, 282.0], [16.4, 282.0], [16.5, 282.0], [16.6, 282.0], [16.7, 282.0], [16.8, 282.0], [16.9, 282.0], [17.0, 282.0], [17.1, 282.0], [17.2, 282.0], [17.3, 282.0], [17.4, 282.0], [17.5, 282.0], [17.6, 282.0], [17.7, 282.0], [17.8, 282.0], [17.9, 282.0], [18.0, 282.0], [18.1, 282.0], [18.2, 282.0], [18.3, 282.0], [18.4, 282.0], [18.5, 282.0], [18.6, 282.0], [18.7, 282.0], [18.8, 282.0], [18.9, 282.0], [19.0, 282.0], [19.1, 282.0], [19.2, 282.0], [19.3, 282.0], [19.4, 282.0], [19.5, 282.0], [19.6, 282.0], [19.7, 282.0], [19.8, 282.0], [19.9, 282.0], [20.0, 282.0], [20.1, 282.0], [20.2, 282.0], [20.3, 282.0], [20.4, 282.0], [20.5, 282.0], [20.6, 282.0], [20.7, 282.0], [20.8, 282.0], [20.9, 283.0], [21.0, 283.0], [21.1, 283.0], [21.2, 283.0], [21.3, 283.0], [21.4, 283.0], [21.5, 283.0], [21.6, 283.0], [21.7, 283.0], [21.8, 283.0], [21.9, 283.0], [22.0, 283.0], [22.1, 283.0], [22.2, 283.0], [22.3, 283.0], [22.4, 283.0], [22.5, 283.0], [22.6, 283.0], [22.7, 283.0], [22.8, 283.0], [22.9, 283.0], [23.0, 283.0], [23.1, 283.0], [23.2, 283.0], [23.3, 283.0], [23.4, 283.0], [23.5, 283.0], [23.6, 283.0], [23.7, 283.0], [23.8, 283.0], [23.9, 283.0], [24.0, 283.0], [24.1, 283.0], [24.2, 283.0], [24.3, 283.0], [24.4, 283.0], [24.5, 283.0], [24.6, 283.0], [24.7, 283.0], [24.8, 283.0], [24.9, 283.0], [25.0, 283.0], [25.1, 283.0], [25.2, 283.0], [25.3, 283.0], [25.4, 283.0], [25.5, 283.0], [25.6, 283.0], [25.7, 283.0], [25.8, 284.0], [25.9, 284.0], [26.0, 284.0], [26.1, 284.0], [26.2, 284.0], [26.3, 284.0], [26.4, 284.0], [26.5, 284.0], [26.6, 284.0], [26.7, 284.0], [26.8, 284.0], [26.9, 284.0], [27.0, 284.0], [27.1, 284.0], [27.2, 284.0], [27.3, 284.0], [27.4, 284.0], [27.5, 284.0], [27.6, 284.0], [27.7, 284.0], [27.8, 284.0], [27.9, 284.0], [28.0, 284.0], [28.1, 284.0], [28.2, 284.0], [28.3, 284.0], [28.4, 284.0], [28.5, 284.0], [28.6, 284.0], [28.7, 284.0], [28.8, 284.0], [28.9, 284.0], [29.0, 284.0], [29.1, 284.0], [29.2, 284.0], [29.3, 284.0], [29.4, 284.0], [29.5, 284.0], [29.6, 284.0], [29.7, 284.0], [29.8, 285.0], [29.9, 285.0], [30.0, 285.0], [30.1, 285.0], [30.2, 285.0], [30.3, 285.0], [30.4, 285.0], [30.5, 285.0], [30.6, 285.0], [30.7, 285.0], [30.8, 285.0], [30.9, 285.0], [31.0, 285.0], [31.1, 285.0], [31.2, 285.0], [31.3, 285.0], [31.4, 285.0], [31.5, 285.0], [31.6, 285.0], [31.7, 285.0], [31.8, 285.0], [31.9, 285.0], [32.0, 285.0], [32.1, 285.0], [32.2, 285.0], [32.3, 285.0], [32.4, 285.0], [32.5, 285.0], [32.6, 285.0], [32.7, 285.0], [32.8, 285.0], [32.9, 286.0], [33.0, 286.0], [33.1, 286.0], [33.2, 286.0], [33.3, 286.0], [33.4, 286.0], [33.5, 286.0], [33.6, 286.0], [33.7, 286.0], [33.8, 286.0], [33.9, 286.0], [34.0, 286.0], [34.1, 286.0], [34.2, 286.0], [34.3, 286.0], [34.4, 286.0], [34.5, 287.0], [34.6, 287.0], [34.7, 287.0], [34.8, 287.0], [34.9, 287.0], [35.0, 287.0], [35.1, 287.0], [35.2, 287.0], [35.3, 287.0], [35.4, 287.0], [35.5, 287.0], [35.6, 287.0], [35.7, 287.0], [35.8, 287.0], [35.9, 288.0], [36.0, 288.0], [36.1, 288.0], [36.2, 288.0], [36.3, 288.0], [36.4, 288.0], [36.5, 288.0], [36.6, 288.0], [36.7, 288.0], [36.8, 288.0], [36.9, 288.0], [37.0, 289.0], [37.1, 289.0], [37.2, 289.0], [37.3, 289.0], [37.4, 289.0], [37.5, 290.0], [37.6, 290.0], [37.7, 290.0], [37.8, 290.0], [37.9, 290.0], [38.0, 291.0], [38.1, 291.0], [38.2, 291.0], [38.3, 291.0], [38.4, 291.0], [38.5, 291.0], [38.6, 291.0], [38.7, 292.0], [38.8, 292.0], [38.9, 292.0], [39.0, 292.0], [39.1, 292.0], [39.2, 292.0], [39.3, 293.0], [39.4, 293.0], [39.5, 294.0], [39.6, 294.0], [39.7, 294.0], [39.8, 295.0], [39.9, 295.0], [40.0, 295.0], [40.1, 295.0], [40.2, 296.0], [40.3, 296.0], [40.4, 297.0], [40.5, 297.0], [40.6, 298.0], [40.7, 298.0], [40.8, 298.0], [40.9, 299.0], [41.0, 299.0], [41.1, 299.0], [41.2, 299.0], [41.3, 299.0], [41.4, 300.0], [41.5, 300.0], [41.6, 300.0], [41.7, 301.0], [41.8, 301.0], [41.9, 302.0], [42.0, 302.0], [42.1, 302.0], [42.2, 303.0], [42.3, 304.0], [42.4, 304.0], [42.5, 305.0], [42.6, 305.0], [42.7, 306.0], [42.8, 306.0], [42.9, 306.0], [43.0, 306.0], [43.1, 306.0], [43.2, 307.0], [43.3, 308.0], [43.4, 309.0], [43.5, 309.0], [43.6, 309.0], [43.7, 310.0], [43.8, 310.0], [43.9, 311.0], [44.0, 313.0], [44.1, 314.0], [44.2, 315.0], [44.3, 317.0], [44.4, 318.0], [44.5, 319.0], [44.6, 321.0], [44.7, 331.0], [44.8, 338.0], [44.9, 349.0], [45.0, 360.0], [45.1, 381.0], [45.2, 393.0], [45.3, 547.0], [45.4, 548.0], [45.5, 549.0], [45.6, 549.0], [45.7, 549.0], [45.8, 551.0], [45.9, 553.0], [46.0, 553.0], [46.1, 554.0], [46.2, 554.0], [46.3, 554.0], [46.4, 554.0], [46.5, 555.0], [46.6, 555.0], [46.7, 555.0], [46.8, 555.0], [46.9, 555.0], [47.0, 556.0], [47.1, 556.0], [47.2, 556.0], [47.3, 556.0], [47.4, 556.0], [47.5, 556.0], [47.6, 556.0], [47.7, 556.0], [47.8, 557.0], [47.9, 557.0], [48.0, 557.0], [48.1, 557.0], [48.2, 557.0], [48.3, 557.0], [48.4, 557.0], [48.5, 557.0], [48.6, 557.0], [48.7, 557.0], [48.8, 557.0], [48.9, 557.0], [49.0, 557.0], [49.1, 557.0], [49.2, 557.0], [49.3, 558.0], [49.4, 558.0], [49.5, 558.0], [49.6, 558.0], [49.7, 558.0], [49.8, 558.0], [49.9, 558.0], [50.0, 558.0], [50.1, 558.0], [50.2, 558.0], [50.3, 558.0], [50.4, 558.0], [50.5, 558.0], [50.6, 558.0], [50.7, 558.0], [50.8, 558.0], [50.9, 558.0], [51.0, 559.0], [51.1, 559.0], [51.2, 559.0], [51.3, 559.0], [51.4, 559.0], [51.5, 559.0], [51.6, 559.0], [51.7, 559.0], [51.8, 559.0], [51.9, 559.0], [52.0, 559.0], [52.1, 559.0], [52.2, 559.0], [52.3, 559.0], [52.4, 559.0], [52.5, 559.0], [52.6, 559.0], [52.7, 559.0], [52.8, 559.0], [52.9, 559.0], [53.0, 559.0], [53.1, 560.0], [53.2, 560.0], [53.3, 560.0], [53.4, 560.0], [53.5, 560.0], [53.6, 560.0], [53.7, 560.0], [53.8, 560.0], [53.9, 560.0], [54.0, 560.0], [54.1, 560.0], [54.2, 560.0], [54.3, 560.0], [54.4, 560.0], [54.5, 560.0], [54.6, 561.0], [54.7, 561.0], [54.8, 561.0], [54.9, 561.0], [55.0, 561.0], [55.1, 561.0], [55.2, 561.0], [55.3, 561.0], [55.4, 561.0], [55.5, 561.0], [55.6, 561.0], [55.7, 561.0], [55.8, 561.0], [55.9, 561.0], [56.0, 561.0], [56.1, 561.0], [56.2, 561.0], [56.3, 561.0], [56.4, 561.0], [56.5, 561.0], [56.6, 561.0], [56.7, 561.0], [56.8, 562.0], [56.9, 562.0], [57.0, 562.0], [57.1, 562.0], [57.2, 562.0], [57.3, 562.0], [57.4, 562.0], [57.5, 562.0], [57.6, 562.0], [57.7, 562.0], [57.8, 562.0], [57.9, 562.0], [58.0, 562.0], [58.1, 562.0], [58.2, 562.0], [58.3, 562.0], [58.4, 562.0], [58.5, 563.0], [58.6, 563.0], [58.7, 563.0], [58.8, 563.0], [58.9, 563.0], [59.0, 563.0], [59.1, 563.0], [59.2, 563.0], [59.3, 563.0], [59.4, 563.0], [59.5, 563.0], [59.6, 563.0], [59.7, 563.0], [59.8, 563.0], [59.9, 563.0], [60.0, 563.0], [60.1, 563.0], [60.2, 563.0], [60.3, 563.0], [60.4, 563.0], [60.5, 563.0], [60.6, 563.0], [60.7, 563.0], [60.8, 563.0], [60.9, 563.0], [61.0, 563.0], [61.1, 563.0], [61.2, 563.0], [61.3, 563.0], [61.4, 563.0], [61.5, 564.0], [61.6, 564.0], [61.7, 564.0], [61.8, 564.0], [61.9, 564.0], [62.0, 564.0], [62.1, 564.0], [62.2, 564.0], [62.3, 564.0], [62.4, 564.0], [62.5, 564.0], [62.6, 564.0], [62.7, 564.0], [62.8, 564.0], [62.9, 564.0], [63.0, 564.0], [63.1, 564.0], [63.2, 564.0], [63.3, 564.0], [63.4, 564.0], [63.5, 564.0], [63.6, 564.0], [63.7, 565.0], [63.8, 565.0], [63.9, 565.0], [64.0, 565.0], [64.1, 565.0], [64.2, 565.0], [64.3, 565.0], [64.4, 565.0], [64.5, 565.0], [64.6, 565.0], [64.7, 565.0], [64.8, 565.0], [64.9, 565.0], [65.0, 565.0], [65.1, 565.0], [65.2, 565.0], [65.3, 565.0], [65.4, 565.0], [65.5, 565.0], [65.6, 565.0], [65.7, 565.0], [65.8, 565.0], [65.9, 565.0], [66.0, 565.0], [66.1, 565.0], [66.2, 565.0], [66.3, 565.0], [66.4, 565.0], [66.5, 565.0], [66.6, 565.0], [66.7, 565.0], [66.8, 565.0], [66.9, 565.0], [67.0, 566.0], [67.1, 566.0], [67.2, 566.0], [67.3, 566.0], [67.4, 566.0], [67.5, 566.0], [67.6, 566.0], [67.7, 566.0], [67.8, 566.0], [67.9, 566.0], [68.0, 566.0], [68.1, 566.0], [68.2, 566.0], [68.3, 566.0], [68.4, 566.0], [68.5, 566.0], [68.6, 566.0], [68.7, 566.0], [68.8, 566.0], [68.9, 566.0], [69.0, 566.0], [69.1, 566.0], [69.2, 566.0], [69.3, 566.0], [69.4, 566.0], [69.5, 566.0], [69.6, 566.0], [69.7, 566.0], [69.8, 566.0], [69.9, 566.0], [70.0, 566.0], [70.1, 566.0], [70.2, 566.0], [70.3, 567.0], [70.4, 567.0], [70.5, 567.0], [70.6, 567.0], [70.7, 567.0], [70.8, 567.0], [70.9, 567.0], [71.0, 567.0], [71.1, 567.0], [71.2, 567.0], [71.3, 567.0], [71.4, 567.0], [71.5, 567.0], [71.6, 567.0], [71.7, 567.0], [71.8, 567.0], [71.9, 567.0], [72.0, 567.0], [72.1, 567.0], [72.2, 567.0], [72.3, 567.0], [72.4, 567.0], [72.5, 567.0], [72.6, 567.0], [72.7, 567.0], [72.8, 567.0], [72.9, 567.0], [73.0, 567.0], [73.1, 567.0], [73.2, 567.0], [73.3, 567.0], [73.4, 567.0], [73.5, 567.0], [73.6, 567.0], [73.7, 567.0], [73.8, 567.0], [73.9, 567.0], [74.0, 567.0], [74.1, 567.0], [74.2, 568.0], [74.3, 568.0], [74.4, 568.0], [74.5, 568.0], [74.6, 568.0], [74.7, 568.0], [74.8, 568.0], [74.9, 568.0], [75.0, 568.0], [75.1, 568.0], [75.2, 568.0], [75.3, 568.0], [75.4, 568.0], [75.5, 568.0], [75.6, 568.0], [75.7, 568.0], [75.8, 568.0], [75.9, 568.0], [76.0, 568.0], [76.1, 568.0], [76.2, 568.0], [76.3, 568.0], [76.4, 568.0], [76.5, 568.0], [76.6, 568.0], [76.7, 568.0], [76.8, 568.0], [76.9, 568.0], [77.0, 568.0], [77.1, 568.0], [77.2, 568.0], [77.3, 568.0], [77.4, 569.0], [77.5, 569.0], [77.6, 569.0], [77.7, 569.0], [77.8, 569.0], [77.9, 569.0], [78.0, 569.0], [78.1, 569.0], [78.2, 569.0], [78.3, 569.0], [78.4, 569.0], [78.5, 569.0], [78.6, 569.0], [78.7, 569.0], [78.8, 569.0], [78.9, 569.0], [79.0, 569.0], [79.1, 569.0], [79.2, 569.0], [79.3, 569.0], [79.4, 569.0], [79.5, 569.0], [79.6, 569.0], [79.7, 569.0], [79.8, 569.0], [79.9, 569.0], [80.0, 569.0], [80.1, 569.0], [80.2, 569.0], [80.3, 569.0], [80.4, 569.0], [80.5, 569.0], [80.6, 569.0], [80.7, 570.0], [80.8, 570.0], [80.9, 570.0], [81.0, 570.0], [81.1, 570.0], [81.2, 570.0], [81.3, 570.0], [81.4, 570.0], [81.5, 570.0], [81.6, 570.0], [81.7, 570.0], [81.8, 570.0], [81.9, 570.0], [82.0, 570.0], [82.1, 570.0], [82.2, 570.0], [82.3, 570.0], [82.4, 570.0], [82.5, 570.0], [82.6, 570.0], [82.7, 570.0], [82.8, 571.0], [82.9, 571.0], [83.0, 571.0], [83.1, 571.0], [83.2, 571.0], [83.3, 571.0], [83.4, 571.0], [83.5, 571.0], [83.6, 571.0], [83.7, 571.0], [83.8, 571.0], [83.9, 571.0], [84.0, 571.0], [84.1, 571.0], [84.2, 571.0], [84.3, 571.0], [84.4, 571.0], [84.5, 572.0], [84.6, 572.0], [84.7, 572.0], [84.8, 572.0], [84.9, 572.0], [85.0, 572.0], [85.1, 572.0], [85.2, 572.0], [85.3, 572.0], [85.4, 572.0], [85.5, 572.0], [85.6, 572.0], [85.7, 572.0], [85.8, 572.0], [85.9, 572.0], [86.0, 572.0], [86.1, 573.0], [86.2, 573.0], [86.3, 573.0], [86.4, 573.0], [86.5, 573.0], [86.6, 573.0], [86.7, 573.0], [86.8, 573.0], [86.9, 573.0], [87.0, 573.0], [87.1, 573.0], [87.2, 573.0], [87.3, 574.0], [87.4, 574.0], [87.5, 574.0], [87.6, 574.0], [87.7, 574.0], [87.8, 574.0], [87.9, 574.0], [88.0, 574.0], [88.1, 574.0], [88.2, 575.0], [88.3, 575.0], [88.4, 575.0], [88.5, 575.0], [88.6, 575.0], [88.7, 575.0], [88.8, 575.0], [88.9, 575.0], [89.0, 575.0], [89.1, 575.0], [89.2, 575.0], [89.3, 576.0], [89.4, 576.0], [89.5, 576.0], [89.6, 576.0], [89.7, 577.0], [89.8, 577.0], [89.9, 577.0], [90.0, 577.0], [90.1, 578.0], [90.2, 578.0], [90.3, 578.0], [90.4, 579.0], [90.5, 579.0], [90.6, 579.0], [90.7, 579.0], [90.8, 579.0], [90.9, 579.0], [91.0, 580.0], [91.1, 580.0], [91.2, 580.0], [91.3, 580.0], [91.4, 580.0], [91.5, 580.0], [91.6, 581.0], [91.7, 581.0], [91.8, 581.0], [91.9, 582.0], [92.0, 582.0], [92.1, 582.0], [92.2, 582.0], [92.3, 583.0], [92.4, 584.0], [92.5, 584.0], [92.6, 584.0], [92.7, 584.0], [92.8, 585.0], [92.9, 585.0], [93.0, 586.0], [93.1, 587.0], [93.2, 587.0], [93.3, 587.0], [93.4, 588.0], [93.5, 588.0], [93.6, 589.0], [93.7, 589.0], [93.8, 590.0], [93.9, 592.0], [94.0, 592.0], [94.1, 594.0], [94.2, 595.0], [94.3, 595.0], [94.4, 595.0], [94.5, 595.0], [94.6, 597.0], [94.7, 598.0], [94.8, 599.0], [94.9, 600.0], [95.0, 600.0], [95.1, 602.0], [95.2, 604.0], [95.3, 605.0], [95.4, 607.0], [95.5, 607.0], [95.6, 608.0], [95.7, 608.0], [95.8, 609.0], [95.9, 609.0], [96.0, 610.0], [96.1, 611.0], [96.2, 614.0], [96.3, 614.0], [96.4, 617.0], [96.5, 621.0], [96.6, 622.0], [96.7, 625.0], [96.8, 626.0], [96.9, 627.0], [97.0, 633.0], [97.1, 638.0], [97.2, 640.0], [97.3, 642.0], [97.4, 643.0], [97.5, 644.0], [97.6, 646.0], [97.7, 653.0], [97.8, 654.0], [97.9, 655.0], [98.0, 660.0], [98.1, 664.0], [98.2, 664.0], [98.3, 666.0], [98.4, 670.0], [98.5, 673.0], [98.6, 677.0], [98.7, 682.0], [98.8, 684.0], [98.9, 689.0], [99.0, 692.0], [99.1, 699.0], [99.2, 700.0], [99.3, 705.0], [99.4, 725.0], [99.5, 766.0], [99.6, 766.0], [99.7, 766.0], [99.8, 767.0], [99.9, 1345.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 602.0], [0.1, 607.0], [0.2, 608.0], [0.3, 613.0], [0.4, 616.0], [0.5, 619.0], [0.6, 621.0], [0.7, 624.0], [0.8, 1073.0], [0.9, 1086.0], [1.0, 1105.0], [1.1, 1133.0], [1.2, 1155.0], [1.3, 1167.0], [1.4, 1196.0], [1.5, 1225.0], [1.6, 1318.0], [1.7, 1348.0], [1.8, 1377.0], [1.9, 1389.0], [2.0, 1395.0], [2.1, 1405.0], [2.2, 1411.0], [2.3, 1451.0], [2.4, 1498.0], [2.5, 1575.0], [2.6, 1635.0], [2.7, 1685.0], [2.8, 1744.0], [2.9, 1757.0], [3.0, 1800.0], [3.1, 1880.0], [3.2, 1899.0], [3.3, 1956.0], [3.4, 2025.0], [3.5, 2064.0], [3.6, 2105.0], [3.7, 2129.0], [3.8, 2167.0], [3.9, 2230.0], [4.0, 2308.0], [4.1, 2353.0], [4.2, 2401.0], [4.3, 2520.0], [4.4, 2534.0], [4.5, 2567.0], [4.6, 2571.0], [4.7, 2572.0], [4.8, 2572.0], [4.9, 2573.0], [5.0, 2574.0], [5.1, 2574.0], [5.2, 2574.0], [5.3, 2575.0], [5.4, 2575.0], [5.5, 2575.0], [5.6, 2576.0], [5.7, 2576.0], [5.8, 2576.0], [5.9, 2576.0], [6.0, 2576.0], [6.1, 2577.0], [6.2, 2578.0], [6.3, 2578.0], [6.4, 2578.0], [6.5, 2578.0], [6.6, 2578.0], [6.7, 2578.0], [6.8, 2579.0], [6.9, 2579.0], [7.0, 2579.0], [7.1, 2579.0], [7.2, 2580.0], [7.3, 2580.0], [7.4, 2580.0], [7.5, 2580.0], [7.6, 2580.0], [7.7, 2580.0], [7.8, 2580.0], [7.9, 2580.0], [8.0, 2580.0], [8.1, 2580.0], [8.2, 2581.0], [8.3, 2581.0], [8.4, 2581.0], [8.5, 2581.0], [8.6, 2581.0], [8.7, 2582.0], [8.8, 2582.0], [8.9, 2582.0], [9.0, 2582.0], [9.1, 2583.0], [9.2, 2583.0], [9.3, 2583.0], [9.4, 2583.0], [9.5, 2583.0], [9.6, 2584.0], [9.7, 2584.0], [9.8, 2584.0], [9.9, 2585.0], [10.0, 2585.0], [10.1, 2585.0], [10.2, 2585.0], [10.3, 2585.0], [10.4, 2586.0], [10.5, 2586.0], [10.6, 2586.0], [10.7, 2587.0], [10.8, 2587.0], [10.9, 2587.0], [11.0, 2587.0], [11.1, 2587.0], [11.2, 2587.0], [11.3, 2587.0], [11.4, 2588.0], [11.5, 2588.0], [11.6, 2588.0], [11.7, 2588.0], [11.8, 2589.0], [11.9, 2589.0], [12.0, 2589.0], [12.1, 2589.0], [12.2, 2590.0], [12.3, 2590.0], [12.4, 2590.0], [12.5, 2591.0], [12.6, 2591.0], [12.7, 2591.0], [12.8, 2591.0], [12.9, 2592.0], [13.0, 2592.0], [13.1, 2593.0], [13.2, 2593.0], [13.3, 2593.0], [13.4, 2594.0], [13.5, 2595.0], [13.6, 2595.0], [13.7, 2596.0], [13.8, 2596.0], [13.9, 2597.0], [14.0, 2597.0], [14.1, 2598.0], [14.2, 2599.0], [14.3, 2599.0], [14.4, 2600.0], [14.5, 2600.0], [14.6, 2602.0], [14.7, 2602.0], [14.8, 2603.0], [14.9, 2605.0], [15.0, 2605.0], [15.1, 2605.0], [15.2, 2606.0], [15.3, 2606.0], [15.4, 2606.0], [15.5, 2607.0], [15.6, 2609.0], [15.7, 2609.0], [15.8, 2610.0], [15.9, 2610.0], [16.0, 2611.0], [16.1, 2613.0], [16.2, 2614.0], [16.3, 2616.0], [16.4, 2619.0], [16.5, 2620.0], [16.6, 2622.0], [16.7, 2624.0], [16.8, 2625.0], [16.9, 2630.0], [17.0, 2650.0], [17.1, 2675.0], [17.2, 2683.0], [17.3, 2703.0], [17.4, 2738.0], [17.5, 2750.0], [17.6, 2761.0], [17.7, 2798.0], [17.8, 2801.0], [17.9, 2802.0], [18.0, 2804.0], [18.1, 2804.0], [18.2, 2804.0], [18.3, 2805.0], [18.4, 2806.0], [18.5, 2806.0], [18.6, 2807.0], [18.7, 2807.0], [18.8, 2807.0], [18.9, 2807.0], [19.0, 2808.0], [19.1, 2809.0], [19.2, 2809.0], [19.3, 2809.0], [19.4, 2809.0], [19.5, 2809.0], [19.6, 2810.0], [19.7, 2810.0], [19.8, 2810.0], [19.9, 2811.0], [20.0, 2811.0], [20.1, 2811.0], [20.2, 2811.0], [20.3, 2811.0], [20.4, 2811.0], [20.5, 2811.0], [20.6, 2812.0], [20.7, 2812.0], [20.8, 2813.0], [20.9, 2813.0], [21.0, 2813.0], [21.1, 2813.0], [21.2, 2814.0], [21.3, 2814.0], [21.4, 2814.0], [21.5, 2814.0], [21.6, 2814.0], [21.7, 2814.0], [21.8, 2815.0], [21.9, 2815.0], [22.0, 2816.0], [22.1, 2816.0], [22.2, 2816.0], [22.3, 2816.0], [22.4, 2816.0], [22.5, 2817.0], [22.6, 2817.0], [22.7, 2817.0], [22.8, 2817.0], [22.9, 2817.0], [23.0, 2817.0], [23.1, 2818.0], [23.2, 2818.0], [23.3, 2818.0], [23.4, 2818.0], [23.5, 2818.0], [23.6, 2818.0], [23.7, 2818.0], [23.8, 2819.0], [23.9, 2819.0], [24.0, 2819.0], [24.1, 2819.0], [24.2, 2819.0], [24.3, 2819.0], [24.4, 2819.0], [24.5, 2819.0], [24.6, 2819.0], [24.7, 2819.0], [24.8, 2820.0], [24.9, 2820.0], [25.0, 2820.0], [25.1, 2820.0], [25.2, 2820.0], [25.3, 2820.0], [25.4, 2820.0], [25.5, 2821.0], [25.6, 2821.0], [25.7, 2821.0], [25.8, 2821.0], [25.9, 2821.0], [26.0, 2821.0], [26.1, 2821.0], [26.2, 2821.0], [26.3, 2821.0], [26.4, 2821.0], [26.5, 2821.0], [26.6, 2821.0], [26.7, 2822.0], [26.8, 2822.0], [26.9, 2822.0], [27.0, 2822.0], [27.1, 2822.0], [27.2, 2822.0], [27.3, 2822.0], [27.4, 2823.0], [27.5, 2823.0], [27.6, 2823.0], [27.7, 2823.0], [27.8, 2823.0], [27.9, 2823.0], [28.0, 2823.0], [28.1, 2823.0], [28.2, 2823.0], [28.3, 2824.0], [28.4, 2824.0], [28.5, 2824.0], [28.6, 2824.0], [28.7, 2824.0], [28.8, 2824.0], [28.9, 2824.0], [29.0, 2824.0], [29.1, 2824.0], [29.2, 2824.0], [29.3, 2825.0], [29.4, 2825.0], [29.5, 2825.0], [29.6, 2825.0], [29.7, 2825.0], [29.8, 2825.0], [29.9, 2826.0], [30.0, 2826.0], [30.1, 2826.0], [30.2, 2826.0], [30.3, 2826.0], [30.4, 2826.0], [30.5, 2826.0], [30.6, 2826.0], [30.7, 2827.0], [30.8, 2827.0], [30.9, 2827.0], [31.0, 2827.0], [31.1, 2827.0], [31.2, 2827.0], [31.3, 2827.0], [31.4, 2828.0], [31.5, 2828.0], [31.6, 2828.0], [31.7, 2828.0], [31.8, 2828.0], [31.9, 2828.0], [32.0, 2828.0], [32.1, 2829.0], [32.2, 2829.0], [32.3, 2829.0], [32.4, 2829.0], [32.5, 2829.0], [32.6, 2829.0], [32.7, 2829.0], [32.8, 2829.0], [32.9, 2829.0], [33.0, 2829.0], [33.1, 2830.0], [33.2, 2830.0], [33.3, 2830.0], [33.4, 2830.0], [33.5, 2830.0], [33.6, 2830.0], [33.7, 2831.0], [33.8, 2831.0], [33.9, 2831.0], [34.0, 2831.0], [34.1, 2831.0], [34.2, 2831.0], [34.3, 2831.0], [34.4, 2831.0], [34.5, 2831.0], [34.6, 2832.0], [34.7, 2832.0], [34.8, 2832.0], [34.9, 2832.0], [35.0, 2832.0], [35.1, 2832.0], [35.2, 2833.0], [35.3, 2833.0], [35.4, 2833.0], [35.5, 2833.0], [35.6, 2833.0], [35.7, 2833.0], [35.8, 2833.0], [35.9, 2834.0], [36.0, 2834.0], [36.1, 2834.0], [36.2, 2834.0], [36.3, 2835.0], [36.4, 2835.0], [36.5, 2835.0], [36.6, 2835.0], [36.7, 2836.0], [36.8, 2836.0], [36.9, 2836.0], [37.0, 2836.0], [37.1, 2836.0], [37.2, 2837.0], [37.3, 2837.0], [37.4, 2837.0], [37.5, 2837.0], [37.6, 2837.0], [37.7, 2837.0], [37.8, 2837.0], [37.9, 2837.0], [38.0, 2837.0], [38.1, 2838.0], [38.2, 2838.0], [38.3, 2838.0], [38.4, 2838.0], [38.5, 2838.0], [38.6, 2839.0], [38.7, 2839.0], [38.8, 2839.0], [38.9, 2839.0], [39.0, 2839.0], [39.1, 2840.0], [39.2, 2840.0], [39.3, 2840.0], [39.4, 2841.0], [39.5, 2841.0], [39.6, 2842.0], [39.7, 2842.0], [39.8, 2842.0], [39.9, 2842.0], [40.0, 2843.0], [40.1, 2843.0], [40.2, 2843.0], [40.3, 2844.0], [40.4, 2845.0], [40.5, 2845.0], [40.6, 2846.0], [40.7, 2846.0], [40.8, 2847.0], [40.9, 2848.0], [41.0, 2848.0], [41.1, 2849.0], [41.2, 2849.0], [41.3, 2849.0], [41.4, 2850.0], [41.5, 2850.0], [41.6, 2850.0], [41.7, 2851.0], [41.8, 2851.0], [41.9, 2852.0], [42.0, 2852.0], [42.1, 2853.0], [42.2, 2853.0], [42.3, 2854.0], [42.4, 2854.0], [42.5, 2855.0], [42.6, 2855.0], [42.7, 2857.0], [42.8, 2858.0], [42.9, 2860.0], [43.0, 2863.0], [43.1, 2863.0], [43.2, 2864.0], [43.3, 2865.0], [43.4, 2865.0], [43.5, 2866.0], [43.6, 2867.0], [43.7, 2867.0], [43.8, 2868.0], [43.9, 2870.0], [44.0, 2871.0], [44.1, 2872.0], [44.2, 2873.0], [44.3, 2875.0], [44.4, 2877.0], [44.5, 2879.0], [44.6, 2880.0], [44.7, 2891.0], [44.8, 2905.0], [44.9, 2916.0], [45.0, 2916.0], [45.1, 2917.0], [45.2, 2924.0], [45.3, 2941.0], [45.4, 2951.0], [45.5, 2991.0], [45.6, 3012.0], [45.7, 3015.0], [45.8, 3016.0], [45.9, 3024.0], [46.0, 3025.0], [46.1, 3025.0], [46.2, 3026.0], [46.3, 3026.0], [46.4, 3026.0], [46.5, 3028.0], [46.6, 3028.0], [46.7, 3028.0], [46.8, 3028.0], [46.9, 3028.0], [47.0, 3028.0], [47.1, 3029.0], [47.2, 3029.0], [47.3, 3030.0], [47.4, 3030.0], [47.5, 3030.0], [47.6, 3030.0], [47.7, 3031.0], [47.8, 3031.0], [47.9, 3032.0], [48.0, 3032.0], [48.1, 3033.0], [48.2, 3033.0], [48.3, 3033.0], [48.4, 3034.0], [48.5, 3034.0], [48.6, 3034.0], [48.7, 3034.0], [48.8, 3035.0], [48.9, 3035.0], [49.0, 3035.0], [49.1, 3036.0], [49.2, 3036.0], [49.3, 3037.0], [49.4, 3037.0], [49.5, 3037.0], [49.6, 3037.0], [49.7, 3037.0], [49.8, 3038.0], [49.9, 3038.0], [50.0, 3038.0], [50.1, 3038.0], [50.2, 3038.0], [50.3, 3038.0], [50.4, 3039.0], [50.5, 3039.0], [50.6, 3039.0], [50.7, 3039.0], [50.8, 3040.0], [50.9, 3040.0], [51.0, 3041.0], [51.1, 3041.0], [51.2, 3041.0], [51.3, 3041.0], [51.4, 3042.0], [51.5, 3042.0], [51.6, 3042.0], [51.7, 3043.0], [51.8, 3043.0], [51.9, 3043.0], [52.0, 3043.0], [52.1, 3044.0], [52.2, 3044.0], [52.3, 3044.0], [52.4, 3044.0], [52.5, 3044.0], [52.6, 3045.0], [52.7, 3046.0], [52.8, 3046.0], [52.9, 3046.0], [53.0, 3046.0], [53.1, 3046.0], [53.2, 3047.0], [53.3, 3048.0], [53.4, 3049.0], [53.5, 3049.0], [53.6, 3050.0], [53.7, 3050.0], [53.8, 3051.0], [53.9, 3051.0], [54.0, 3051.0], [54.1, 3052.0], [54.2, 3052.0], [54.3, 3053.0], [54.4, 3053.0], [54.5, 3054.0], [54.6, 3055.0], [54.7, 3055.0], [54.8, 3056.0], [54.9, 3057.0], [55.0, 3057.0], [55.1, 3058.0], [55.2, 3061.0], [55.3, 3063.0], [55.4, 3065.0], [55.5, 3065.0], [55.6, 3072.0], [55.7, 3073.0], [55.8, 3076.0], [55.9, 3078.0], [56.0, 3080.0], [56.1, 3083.0], [56.2, 3084.0], [56.3, 3085.0], [56.4, 3087.0], [56.5, 3091.0], [56.6, 3093.0], [56.7, 3094.0], [56.8, 3095.0], [56.9, 3095.0], [57.0, 3096.0], [57.1, 3098.0], [57.2, 3099.0], [57.3, 3103.0], [57.4, 3105.0], [57.5, 3105.0], [57.6, 3106.0], [57.7, 3107.0], [57.8, 3108.0], [57.9, 3109.0], [58.0, 3109.0], [58.1, 3112.0], [58.2, 3113.0], [58.3, 3116.0], [58.4, 3118.0], [58.5, 3119.0], [58.6, 3119.0], [58.7, 3120.0], [58.8, 3120.0], [58.9, 3121.0], [59.0, 3122.0], [59.1, 3123.0], [59.2, 3125.0], [59.3, 3126.0], [59.4, 3127.0], [59.5, 3130.0], [59.6, 3131.0], [59.7, 3132.0], [59.8, 3134.0], [59.9, 3137.0], [60.0, 3138.0], [60.1, 3142.0], [60.2, 3150.0], [60.3, 3150.0], [60.4, 3152.0], [60.5, 3163.0], [60.6, 3178.0], [60.7, 3191.0], [60.8, 3197.0], [60.9, 3205.0], [61.0, 3224.0], [61.1, 3240.0], [61.2, 3245.0], [61.3, 3247.0], [61.4, 3251.0], [61.5, 3253.0], [61.6, 3255.0], [61.7, 3256.0], [61.8, 3257.0], [61.9, 3258.0], [62.0, 3258.0], [62.1, 3258.0], [62.2, 3260.0], [62.3, 3260.0], [62.4, 3261.0], [62.5, 3261.0], [62.6, 3262.0], [62.7, 3262.0], [62.8, 3263.0], [62.9, 3263.0], [63.0, 3264.0], [63.1, 3264.0], [63.2, 3264.0], [63.3, 3264.0], [63.4, 3265.0], [63.5, 3265.0], [63.6, 3265.0], [63.7, 3265.0], [63.8, 3265.0], [63.9, 3266.0], [64.0, 3266.0], [64.1, 3267.0], [64.2, 3267.0], [64.3, 3267.0], [64.4, 3267.0], [64.5, 3268.0], [64.6, 3268.0], [64.7, 3268.0], [64.8, 3268.0], [64.9, 3268.0], [65.0, 3269.0], [65.1, 3269.0], [65.2, 3269.0], [65.3, 3269.0], [65.4, 3269.0], [65.5, 3270.0], [65.6, 3270.0], [65.7, 3270.0], [65.8, 3270.0], [65.9, 3270.0], [66.0, 3271.0], [66.1, 3271.0], [66.2, 3271.0], [66.3, 3271.0], [66.4, 3271.0], [66.5, 3271.0], [66.6, 3272.0], [66.7, 3272.0], [66.8, 3272.0], [66.9, 3272.0], [67.0, 3273.0], [67.1, 3273.0], [67.2, 3273.0], [67.3, 3273.0], [67.4, 3274.0], [67.5, 3274.0], [67.6, 3274.0], [67.7, 3274.0], [67.8, 3274.0], [67.9, 3274.0], [68.0, 3274.0], [68.1, 3274.0], [68.2, 3274.0], [68.3, 3274.0], [68.4, 3275.0], [68.5, 3275.0], [68.6, 3275.0], [68.7, 3275.0], [68.8, 3276.0], [68.9, 3276.0], [69.0, 3276.0], [69.1, 3276.0], [69.2, 3277.0], [69.3, 3277.0], [69.4, 3277.0], [69.5, 3277.0], [69.6, 3277.0], [69.7, 3277.0], [69.8, 3278.0], [69.9, 3278.0], [70.0, 3278.0], [70.1, 3278.0], [70.2, 3279.0], [70.3, 3279.0], [70.4, 3279.0], [70.5, 3279.0], [70.6, 3280.0], [70.7, 3280.0], [70.8, 3280.0], [70.9, 3280.0], [71.0, 3281.0], [71.1, 3281.0], [71.2, 3281.0], [71.3, 3281.0], [71.4, 3281.0], [71.5, 3281.0], [71.6, 3281.0], [71.7, 3282.0], [71.8, 3282.0], [71.9, 3282.0], [72.0, 3282.0], [72.1, 3282.0], [72.2, 3282.0], [72.3, 3282.0], [72.4, 3282.0], [72.5, 3282.0], [72.6, 3282.0], [72.7, 3283.0], [72.8, 3283.0], [72.9, 3283.0], [73.0, 3283.0], [73.1, 3283.0], [73.2, 3283.0], [73.3, 3284.0], [73.4, 3284.0], [73.5, 3284.0], [73.6, 3284.0], [73.7, 3284.0], [73.8, 3284.0], [73.9, 3284.0], [74.0, 3284.0], [74.1, 3284.0], [74.2, 3285.0], [74.3, 3285.0], [74.4, 3285.0], [74.5, 3285.0], [74.6, 3285.0], [74.7, 3286.0], [74.8, 3286.0], [74.9, 3286.0], [75.0, 3286.0], [75.1, 3286.0], [75.2, 3286.0], [75.3, 3287.0], [75.4, 3287.0], [75.5, 3287.0], [75.6, 3287.0], [75.7, 3287.0], [75.8, 3288.0], [75.9, 3288.0], [76.0, 3288.0], [76.1, 3288.0], [76.2, 3288.0], [76.3, 3289.0], [76.4, 3289.0], [76.5, 3289.0], [76.6, 3289.0], [76.7, 3289.0], [76.8, 3289.0], [76.9, 3290.0], [77.0, 3290.0], [77.1, 3290.0], [77.2, 3290.0], [77.3, 3290.0], [77.4, 3291.0], [77.5, 3291.0], [77.6, 3291.0], [77.7, 3291.0], [77.8, 3291.0], [77.9, 3291.0], [78.0, 3291.0], [78.1, 3292.0], [78.2, 3292.0], [78.3, 3292.0], [78.4, 3292.0], [78.5, 3293.0], [78.6, 3293.0], [78.7, 3293.0], [78.8, 3293.0], [78.9, 3293.0], [79.0, 3293.0], [79.1, 3294.0], [79.2, 3294.0], [79.3, 3294.0], [79.4, 3294.0], [79.5, 3294.0], [79.6, 3295.0], [79.7, 3295.0], [79.8, 3295.0], [79.9, 3295.0], [80.0, 3295.0], [80.1, 3295.0], [80.2, 3296.0], [80.3, 3296.0], [80.4, 3296.0], [80.5, 3297.0], [80.6, 3297.0], [80.7, 3297.0], [80.8, 3297.0], [80.9, 3298.0], [81.0, 3299.0], [81.1, 3299.0], [81.2, 3300.0], [81.3, 3300.0], [81.4, 3301.0], [81.5, 3301.0], [81.6, 3302.0], [81.7, 3302.0], [81.8, 3302.0], [81.9, 3303.0], [82.0, 3303.0], [82.1, 3303.0], [82.2, 3304.0], [82.3, 3304.0], [82.4, 3305.0], [82.5, 3305.0], [82.6, 3305.0], [82.7, 3306.0], [82.8, 3307.0], [82.9, 3307.0], [83.0, 3308.0], [83.1, 3308.0], [83.2, 3308.0], [83.3, 3308.0], [83.4, 3309.0], [83.5, 3310.0], [83.6, 3311.0], [83.7, 3311.0], [83.8, 3312.0], [83.9, 3312.0], [84.0, 3312.0], [84.1, 3314.0], [84.2, 3316.0], [84.3, 3316.0], [84.4, 3317.0], [84.5, 3319.0], [84.6, 3320.0], [84.7, 3320.0], [84.8, 3321.0], [84.9, 3322.0], [85.0, 3322.0], [85.1, 3323.0], [85.2, 3325.0], [85.3, 3326.0], [85.4, 3327.0], [85.5, 3329.0], [85.6, 3330.0], [85.7, 3332.0], [85.8, 3332.0], [85.9, 3333.0], [86.0, 3335.0], [86.1, 3337.0], [86.2, 3338.0], [86.3, 3340.0], [86.4, 3343.0], [86.5, 3344.0], [86.6, 3358.0], [86.7, 3363.0], [86.8, 3364.0], [86.9, 3365.0], [87.0, 3367.0], [87.1, 3372.0], [87.2, 3376.0], [87.3, 3380.0], [87.4, 3386.0], [87.5, 3390.0], [87.6, 3391.0], [87.7, 3394.0], [87.8, 3395.0], [87.9, 3403.0], [88.0, 3412.0], [88.1, 3416.0], [88.2, 3420.0], [88.3, 3429.0], [88.4, 3441.0], [88.5, 3445.0], [88.6, 3452.0], [88.7, 3486.0], [88.8, 3501.0], [88.9, 3815.0], [89.0, 3833.0], [89.1, 3847.0], [89.2, 3856.0], [89.3, 3862.0], [89.4, 3864.0], [89.5, 3866.0], [89.6, 3870.0], [89.7, 3875.0], [89.8, 3876.0], [89.9, 3877.0], [90.0, 3879.0], [90.1, 3879.0], [90.2, 3892.0], [90.3, 3907.0], [90.4, 3943.0], [90.5, 4283.0], [90.6, 4316.0], [90.7, 4322.0], [90.8, 4332.0], [90.9, 4337.0], [91.0, 4341.0], [91.1, 4354.0], [91.2, 4483.0], [91.3, 5871.0], [91.4, 5882.0], [91.5, 5892.0], [91.6, 5900.0], [91.7, 5903.0], [91.8, 5907.0], [91.9, 5912.0], [92.0, 5916.0], [92.1, 5925.0], [92.2, 5931.0], [92.3, 5935.0], [92.4, 5982.0], [92.5, 6082.0], [92.6, 6167.0], [92.7, 6323.0], [92.8, 6333.0], [92.9, 6339.0], [93.0, 6345.0], [93.1, 6356.0], [93.2, 6358.0], [93.3, 6363.0], [93.4, 6373.0], [93.5, 6376.0], [93.6, 6385.0], [93.7, 6389.0], [93.8, 6392.0], [93.9, 6403.0], [94.0, 6473.0], [94.1, 6518.0], [94.2, 9906.0], [94.3, 9914.0], [94.4, 9921.0], [94.5, 9933.0], [94.6, 9945.0], [94.7, 9946.0], [94.8, 9953.0], [94.9, 9960.0], [95.0, 10359.0], [95.1, 10362.0], [95.2, 10367.0], [95.3, 10389.0], [95.4, 10393.0], [95.5, 10400.0], [95.6, 10400.0], [95.7, 10407.0], [95.8, 10412.0], [95.9, 10425.0], [96.0, 10446.0], [96.1, 10452.0], [96.2, 16067.0], [96.3, 16232.0], [96.4, 16331.0], [96.5, 16422.0], [96.6, 17836.0], [96.7, 18010.0], [96.8, 18083.0], [96.9, 18105.0], [97.0, 18155.0], [97.1, 18170.0], [97.2, 18216.0], [97.3, 18254.0], [97.4, 18262.0], [97.5, 18293.0], [97.6, 18300.0], [97.7, 18312.0], [97.8, 18320.0], [97.9, 18412.0], [98.0, 18441.0], [98.1, 18454.0], [98.2, 18472.0], [98.3, 18483.0], [98.4, 18509.0], [98.5, 18525.0], [98.6, 18577.0], [98.7, 18615.0], [98.8, 18621.0], [98.9, 18633.0], [99.0, 18721.0], [99.1, 18781.0], [99.2, 18803.0], [99.3, 18836.0], [99.4, 18855.0], [99.5, 18867.0], [99.6, 18893.0], [99.7, 18991.0], [99.8, 19036.0], [99.9, 21068.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 953.0, "series": [{"data": [[600.0, 2.0], [700.0, 11.0], [800.0, 6.0], [900.0, 1.0], [1000.0, 5.0], [1100.0, 4.0], [1200.0, 3.0], [1300.0, 5.0], [1400.0, 3.0], [1500.0, 5.0], [1600.0, 3.0], [1700.0, 8.0], [1800.0, 3.0], [1900.0, 7.0], [2000.0, 6.0], [2300.0, 175.0], [2200.0, 97.0], [2400.0, 209.0], [2500.0, 577.0], [2600.0, 53.0], [2700.0, 479.0], [2800.0, 15.0], [2900.0, 3.0], [3500.0, 24.0], [3700.0, 14.0], [3600.0, 6.0], [3900.0, 1.0], [5600.0, 22.0], [5500.0, 3.0], [5800.0, 11.0], [5700.0, 16.0], [5900.0, 3.0], [9700.0, 3.0], [9600.0, 16.0], [9800.0, 20.0], [15700.0, 2.0], [15900.0, 1.0], [16000.0, 3.0], [16100.0, 2.0], [18200.0, 7.0], [17900.0, 11.0], [17500.0, 1.0], [17700.0, 5.0], [18000.0, 11.0], [18400.0, 1.0], [18300.0, 7.0], [17800.0, 12.0], [18100.0, 6.0], [17600.0, 2.0], [18700.0, 1.0], [20700.0, 1.0], [24800.0, 1.0], [300.0, 15.0], [400.0, 3.0], [500.0, 9.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[600.0, 81.0], [300.0, 76.0], [1300.0, 2.0], [700.0, 15.0], [200.0, 793.0], [500.0, 953.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[600.0, 15.0], [1000.0, 3.0], [1100.0, 9.0], [1200.0, 3.0], [1300.0, 10.0], [1400.0, 7.0], [1500.0, 1.0], [1600.0, 4.0], [1700.0, 5.0], [1800.0, 5.0], [1900.0, 3.0], [2000.0, 4.0], [2100.0, 5.0], [2200.0, 2.0], [2300.0, 4.0], [2400.0, 2.0], [2500.0, 194.0], [2600.0, 56.0], [2700.0, 8.0], [2800.0, 520.0], [2900.0, 15.0], [3000.0, 224.0], [3100.0, 69.0], [3200.0, 391.0], [3300.0, 128.0], [3400.0, 17.0], [3500.0, 1.0], [3600.0, 1.0], [3800.0, 26.0], [3900.0, 4.0], [4000.0, 1.0], [4300.0, 13.0], [4200.0, 1.0], [4400.0, 1.0], [5800.0, 6.0], [5900.0, 17.0], [6000.0, 2.0], [6100.0, 1.0], [6300.0, 24.0], [6400.0, 4.0], [6500.0, 1.0], [9800.0, 1.0], [9900.0, 15.0], [10300.0, 10.0], [10400.0, 13.0], [16200.0, 1.0], [16000.0, 2.0], [16300.0, 3.0], [16400.0, 2.0], [17800.0, 2.0], [18300.0, 6.0], [18400.0, 10.0], [18000.0, 4.0], [18100.0, 6.0], [18200.0, 7.0], [18500.0, 6.0], [18800.0, 9.0], [18600.0, 5.0], [19000.0, 3.0], [18900.0, 2.0], [18700.0, 4.0], [21000.0, 1.0], [25100.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 25100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 102.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3624.0, "series": [{"data": [[0.0, 887.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1147.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 102.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 3624.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 247.49322916666554, "minX": 1.66724448E12, "maxY": 247.49322916666554, "series": [{"data": [[1.66724448E12, 247.49322916666554]], "isOverall": false, "label": "Performance-Testing", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66724448E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 274.0, "minX": 1.0, "maxY": 25134.0, "series": [{"data": [[2.0, 16052.0], [3.0, 16049.0], [4.0, 15789.0], [5.0, 17763.0], [6.0, 17607.0], [7.0, 16183.0], [8.0, 16030.0], [9.0, 17920.0], [10.0, 15747.0], [11.0, 17854.0], [12.0, 15954.0], [13.0, 17882.0], [14.0, 5600.0], [15.0, 2305.0], [16.0, 2297.0], [17.0, 2306.0], [18.0, 2294.0], [19.0, 9619.0], [20.0, 18016.0], [21.0, 2301.0], [22.0, 2541.0], [23.0, 12762.0], [24.0, 2311.0], [25.0, 10254.0], [26.0, 2298.0], [27.0, 9654.0], [28.0, 9636.0], [29.0, 2296.0], [30.0, 10302.0], [31.0, 2571.0], [33.0, 17981.0], [32.0, 18031.0], [35.0, 24847.0], [34.0, 2305.0], [37.0, 2529.0], [36.0, 10255.0], [39.0, 7700.0], [38.0, 6182.5], [41.0, 18269.0], [40.0, 10010.0], [43.0, 2530.0], [42.0, 18068.0], [45.0, 2537.0], [44.0, 2295.0], [47.0, 20786.0], [46.0, 2542.0], [49.0, 9728.0], [48.0, 6179.0], [51.0, 2303.0], [50.0, 2296.0], [53.0, 2529.0], [52.0, 9977.5], [55.0, 5800.0], [54.0, 10392.5], [56.0, 2549.0], [59.0, 2297.0], [58.0, 13767.333333333334], [61.0, 3551.0], [60.0, 2294.0], [63.0, 2290.0], [62.0, 2597.0], [67.0, 2548.0], [66.0, 2555.0], [65.0, 10399.0], [64.0, 2527.0], [71.0, 2533.0], [70.0, 2522.0], [69.0, 2550.0], [68.0, 2539.0], [75.0, 2532.0], [74.0, 2533.0], [73.0, 2304.0], [72.0, 2523.0], [78.0, 2300.0], [77.0, 2566.0], [76.0, 10176.0], [83.0, 5776.5], [82.0, 2312.0], [81.0, 2297.0], [80.0, 2303.0], [87.0, 2298.0], [86.0, 2302.0], [85.0, 18314.5], [84.0, 5628.0], [91.0, 2299.0], [90.0, 2309.0], [89.0, 2296.0], [95.0, 2567.0], [94.0, 2542.0], [93.0, 2554.0], [92.0, 2300.0], [99.0, 2546.0], [98.0, 18078.0], [97.0, 2558.0], [96.0, 2565.0], [103.0, 2597.0], [102.0, 2552.0], [101.0, 2568.0], [100.0, 2569.0], [107.0, 18011.0], [106.0, 10365.0], [105.0, 2567.0], [104.0, 2589.0], [110.0, 1324.75], [111.0, 2746.642857142857], [112.0, 1378.8333333333333], [113.0, 1592.5], [114.0, 1668.5], [115.0, 1904.0], [117.0, 1416.5], [118.0, 2113.0], [119.0, 2241.5], [116.0, 2541.0], [120.0, 1674.1499999999999], [121.0, 2071.4285714285716], [122.0, 2542.2], [123.0, 2810.0], [124.0, 3059.5], [125.0, 8335.4], [126.0, 2185.4166666666665], [127.0, 1127.0], [129.0, 1055.3333333333335], [130.0, 955.2], [134.0, 1045.6666666666665], [135.0, 1424.5], [133.0, 973.3333333333334], [131.0, 1309.0], [128.0, 1308.0], [132.0, 2305.0], [143.0, 2548.0], [142.0, 2294.0], [141.0, 2552.0], [140.0, 2298.0], [139.0, 2538.0], [138.0, 2294.0], [137.0, 2544.0], [136.0, 2301.0], [151.0, 2532.0], [150.0, 2549.0], [149.0, 2539.0], [148.0, 10410.0], [147.0, 2562.0], [146.0, 2532.0], [145.0, 2558.0], [144.0, 2530.0], [159.0, 6469.5], [158.0, 2618.0], [157.0, 2537.0], [156.0, 2535.0], [155.0, 2596.0], [154.0, 2539.0], [153.0, 2551.0], [152.0, 2542.0], [166.0, 2484.857142857143], [165.0, 2521.0], [167.0, 2436.4], [164.0, 4110.222222222223], [163.0, 2524.5], [162.0, 2634.5714285714284], [161.0, 2539.75], [160.0, 2556.428571428571], [175.0, 2305.0], [172.0, 4069.3333333333335], [170.0, 4901.0], [169.0, 4378.285714285714], [168.0, 2660.0], [174.0, 2510.5], [173.0, 2302.0], [183.0, 2467.25], [182.0, 2511.3333333333335], [181.0, 2467.1666666666665], [179.0, 2431.0], [178.0, 2427.0], [177.0, 2527.0], [176.0, 2505.2], [180.0, 2613.0], [191.0, 2434.0], [189.0, 2476.8333333333335], [188.0, 5062.833333333333], [187.0, 2657.4], [186.0, 5767.400000000001], [185.0, 2442.0], [190.0, 2629.0], [184.0, 2300.0], [199.0, 2469.75], [197.0, 2478.2], [196.0, 2572.8], [195.0, 2489.8], [193.0, 2520.3333333333335], [192.0, 7757.333333333333], [198.0, 2673.6666666666665], [194.0, 2534.0], [200.0, 2508.0], [201.0, 2630.5], [203.0, 2596.4], [204.0, 2706.0], [205.0, 2596.3333333333335], [206.0, 2615.5], [207.0, 7880.666666666666], [209.0, 4927.571428571428], [210.0, 8256.727272727274], [211.0, 2708.0], [214.0, 2571.6666666666665], [215.0, 2299.0], [213.0, 2309.0], [212.0, 6724.5], [208.0, 2533.0], [216.0, 4426.0], [218.0, 2469.0], [219.0, 2474.6666666666665], [221.0, 2571.0], [222.0, 2551.75], [223.0, 2636.0], [220.0, 2529.6666666666665], [217.0, 2406.0], [224.0, 2511.0], [225.0, 3163.0], [226.0, 2632.3333333333335], [227.0, 2995.3333333333335], [231.0, 2674.8571428571427], [230.0, 2300.0], [229.0, 18197.0], [228.0, 2634.5], [232.0, 2572.3333333333335], [233.0, 2636.0], [234.0, 2415.0], [235.0, 6510.5], [236.0, 2609.7272727272725], [237.0, 2603.076923076923], [238.0, 2544.727272727273], [239.0, 2634.25], [240.0, 2574.1111111111113], [241.0, 2391.0], [242.0, 2504.6], [243.0, 2589.6666666666665], [244.0, 2513.0], [246.0, 2581.3999999999996], [247.0, 3693.0], [245.0, 2610.4545454545455], [249.0, 2626.0], [248.0, 7702.333333333333], [252.0, 2577.125], [254.0, 2553.0], [255.0, 2832.875], [253.0, 2633.5555555555557], [251.0, 10256.5], [250.0, 10275.5], [257.0, 5278.818181818182], [256.0, 2508.2], [258.0, 4401.142857142858], [259.0, 3731.4736842105262], [262.0, 2428.0], [263.0, 2788.636363636364], [264.0, 4197.0], [270.0, 3771.5714285714284], [271.0, 6452.0], [268.0, 2564.421052631579], [269.0, 2726.1666666666665], [266.0, 2566.588235294118], [267.0, 2578.2608695652175], [265.0, 4005.222222222223], [261.0, 2650.2000000000003], [260.0, 2546.727272727273], [273.0, 2303.0], [272.0, 2524.0], [274.0, 2357.3333333333335], [278.0, 2832.727272727273], [279.0, 2452.75], [277.0, 2593.947368421053], [276.0, 2594.6666666666665], [275.0, 2633.25], [280.0, 2428.3333333333335], [286.0, 2690.375], [287.0, 3937.3333333333335], [285.0, 3552.1333333333337], [284.0, 2617.0], [281.0, 2600.1666666666665], [282.0, 2458.0], [283.0, 2767.0], [289.0, 2575.1428571428573], [288.0, 2552.285714285714], [290.0, 3537.666666666667], [291.0, 3811.0], [292.0, 2503.25], [293.0, 5993.5], [294.0, 3316.1428571428573], [295.0, 3342.458333333333], [296.0, 3012.4666666666662], [303.0, 2571.833333333333], [301.0, 3127.363636363636], [300.0, 3072.352941176471], [302.0, 2571.7999999999997], [297.0, 2537.7142857142853], [298.0, 3321.2105263157887], [299.0, 3290.357142857143], [306.0, 2880.7999999999997], [307.0, 2586.0000000000005], [316.0, 2623.8499999999995], [317.0, 2617.620689655172], [318.0, 2590.928571428571], [319.0, 2613.1666666666665], [309.0, 5099.75], [311.0, 2603.8125], [313.0, 2867.8], [314.0, 2693.04347826087], [315.0, 3039.0000000000005], [312.0, 2656.2592592592587], [310.0, 4236.454545454545], [308.0, 2677.6], [305.0, 2579.882352941177], [304.0, 2585.6470588235297], [321.0, 3050.785714285714], [320.0, 3040.3999999999996], [322.0, 3779.5384615384614], [323.0, 3247.121951219512], [324.0, 2572.981132075471], [327.0, 3684.538461538462], [328.0, 2897.2499999999995], [332.0, 2580.8333333333335], [333.0, 2624.0], [330.0, 3665.0000000000005], [331.0, 10055.0], [329.0, 3262.9545454545455], [326.0, 3050.0000000000005], [325.0, 2609.9245283018868], [1.0, 16142.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[247.49322916666668, 3335.56979166667]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 280.0], [3.0, 282.0], [4.0, 278.0], [5.0, 281.0], [6.0, 279.0], [7.0, 279.0], [8.0, 276.0], [9.0, 341.0], [10.0, 283.0], [11.0, 291.0], [12.0, 278.0], [13.0, 287.0], [14.0, 567.0], [15.0, 567.0], [16.0, 554.0], [17.0, 565.0], [18.0, 559.0], [19.0, 287.0], [20.0, 284.0], [21.0, 569.0], [22.0, 578.0], [23.0, 566.3333333333334], [24.0, 554.0], [25.0, 566.0], [26.0, 551.0], [27.0, 280.0], [28.0, 279.0], [29.0, 569.0], [30.0, 565.0], [31.0, 554.0], [33.0, 281.0], [32.0, 288.0], [35.0, 287.0], [34.0, 1356.0], [37.0, 564.0], [36.0, 567.0], [39.0, 430.5], [38.0, 559.5], [41.0, 428.0], [40.0, 567.0], [43.0, 597.0], [42.0, 425.0], [45.0, 595.0], [44.0, 568.0], [47.0, 282.0], [46.0, 588.0], [49.0, 419.0], [48.0, 574.0], [51.0, 595.0], [50.0, 582.0], [53.0, 564.0], [52.0, 588.5], [55.0, 283.0], [54.0, 565.0], [56.0, 560.0], [59.0, 556.0], [58.0, 376.3333333333333], [61.0, 278.0], [60.0, 556.0], [63.0, 282.0], [62.0, 566.0], [67.0, 283.0], [66.0, 280.0], [65.0, 566.5], [64.0, 569.0], [71.0, 282.0], [70.0, 280.0], [69.0, 278.0], [68.0, 566.0], [75.0, 563.0], [74.0, 562.0], [73.0, 559.0], [72.0, 284.0], [78.0, 567.0], [77.0, 281.0], [76.0, 420.5], [83.0, 473.5], [82.0, 565.0], [81.0, 288.0], [80.0, 282.5], [87.0, 280.0], [86.0, 282.0], [85.0, 424.0], [84.0, 399.0], [91.0, 277.0], [90.0, 284.0], [89.0, 280.5], [95.0, 281.0], [94.0, 280.0], [93.0, 283.0], [92.0, 281.0], [99.0, 281.0], [98.0, 279.0], [97.0, 274.0], [96.0, 280.0], [103.0, 286.0], [102.0, 277.0], [101.0, 282.0], [100.0, 282.0], [107.0, 282.0], [106.0, 561.0], [105.0, 283.0], [104.0, 561.0], [110.0, 611.125], [111.0, 504.42857142857144], [112.0, 574.3333333333333], [113.0, 424.0], [114.0, 560.0], [115.0, 564.75], [117.0, 567.3333333333334], [118.0, 626.5], [119.0, 430.0], [116.0, 280.0], [120.0, 579.35], [121.0, 541.5714285714286], [122.0, 466.4], [123.0, 444.6666666666667], [124.0, 434.25], [125.0, 506.0], [126.0, 504.75], [127.0, 483.6666666666667], [129.0, 386.3333333333333], [130.0, 527.0], [134.0, 417.3333333333333], [135.0, 293.5], [133.0, 386.3333333333333], [131.0, 429.5], [128.0, 292.0], [132.0, 276.0], [143.0, 565.0], [142.0, 282.0], [141.0, 570.0], [140.0, 282.0], [139.0, 285.0], [138.0, 282.0], [137.0, 280.0], [136.0, 281.0], [151.0, 278.0], [150.0, 278.0], [149.0, 280.0], [148.0, 421.0], [147.0, 276.0], [146.0, 279.0], [145.0, 275.0], [144.0, 277.0], [159.0, 431.0], [158.0, 461.0], [157.0, 549.0], [156.0, 279.0], [155.0, 283.0], [154.0, 279.0], [153.0, 284.0], [152.0, 283.0], [166.0, 452.28571428571433], [165.0, 389.5], [167.0, 345.0], [164.0, 423.0], [163.0, 450.5], [162.0, 465.57142857142856], [161.0, 368.75], [160.0, 461.7142857142857], [175.0, 368.75], [172.0, 407.5], [170.0, 387.0], [169.0, 495.42857142857144], [168.0, 398.4285714285714], [174.0, 429.0], [173.0, 572.0], [183.0, 406.125], [182.0, 499.6666666666667], [181.0, 572.0], [179.0, 296.0], [178.0, 425.2], [177.0, 389.3333333333333], [176.0, 465.6], [180.0, 512.25], [191.0, 388.3333333333333], [189.0, 384.5], [188.0, 429.6666666666667], [187.0, 345.6], [186.0, 584.3000000000001], [185.0, 394.6666666666667], [190.0, 430.5], [184.0, 283.0], [199.0, 371.0], [197.0, 423.4], [196.0, 463.4], [195.0, 414.4], [193.0, 380.6666666666667], [192.0, 442.0], [198.0, 490.6666666666667], [194.0, 290.0], [200.0, 438.5], [201.0, 435.0], [203.0, 527.8], [204.0, 558.0], [205.0, 659.6666666666666], [206.0, 629.0], [207.0, 619.0], [209.0, 564.1428571428572], [210.0, 589.9090909090909], [211.0, 565.0], [214.0, 475.3333333333333], [215.0, 700.0], [213.0, 302.0], [212.0, 439.0], [208.0, 289.0], [216.0, 486.75], [218.0, 421.0], [219.0, 486.3333333333333], [221.0, 450.0], [222.0, 532.75], [223.0, 419.5], [220.0, 482.6666666666667], [217.0, 638.0], [224.0, 459.5], [225.0, 428.5], [226.0, 470.0], [227.0, 516.8333333333333], [231.0, 565.4285714285714], [230.0, 286.0], [229.0, 277.0], [228.0, 427.0], [232.0, 498.6666666666667], [233.0, 537.875], [234.0, 508.0], [235.0, 439.5], [236.0, 506.6363636363637], [237.0, 472.0769230769231], [238.0, 388.0], [239.0, 428.625], [240.0, 466.22222222222223], [241.0, 427.5], [242.0, 451.8], [243.0, 422.58333333333326], [244.0, 396.40000000000003], [246.0, 452.33333333333337], [247.0, 405.8571428571429], [245.0, 436.0], [249.0, 373.6666666666667], [248.0, 423.3333333333333], [252.0, 496.25000000000006], [254.0, 378.2857142857142], [255.0, 462.06249999999994], [253.0, 453.44444444444446], [251.0, 424.5], [250.0, 568.0], [257.0, 412.8181818181818], [256.0, 339.4], [258.0, 449.71428571428567], [259.0, 455.10526315789474], [262.0, 404.4], [263.0, 446.1818181818182], [264.0, 434.0], [270.0, 526.0000000000001], [271.0, 491.0], [268.0, 402.9473684210527], [269.0, 428.6666666666667], [266.0, 450.2941176470589], [267.0, 483.4347826086957], [265.0, 462.6666666666667], [261.0, 378.7], [260.0, 421.8181818181818], [273.0, 285.0], [272.0, 425.5], [274.0, 378.3333333333333], [278.0, 384.8181818181818], [279.0, 422.25], [277.0, 399.2105263157895], [276.0, 455.38888888888886], [275.0, 526.75], [280.0, 376.3333333333333], [286.0, 458.0], [287.0, 428.1666666666667], [285.0, 433.79999999999995], [284.0, 564.1666666666667], [281.0, 520.8333333333334], [282.0, 280.0], [283.0, 396.6], [289.0, 444.7142857142857], [288.0, 446.42857142857144], [290.0, 478.3333333333333], [291.0, 424.5], [292.0, 423.25], [293.0, 278.5], [294.0, 443.4285714285714], [295.0, 460.20833333333326], [296.0, 377.06666666666666], [303.0, 471.8333333333333], [301.0, 450.4090909090909], [300.0, 402.35294117647067], [302.0, 395.8], [297.0, 462.5], [298.0, 475.3684210526316], [299.0, 462.50000000000006], [306.0, 456.84], [307.0, 406.14285714285717], [316.0, 465.09999999999997], [317.0, 457.2758620689656], [318.0, 423.89285714285717], [319.0, 376.5], [309.0, 494.5], [311.0, 426.4375], [313.0, 431.52000000000004], [314.0, 417.304347826087], [315.0, 425.5625], [312.0, 408.33333333333337], [310.0, 437.45454545454544], [308.0, 393.8], [305.0, 439.64705882352933], [304.0, 452.94117647058823], [321.0, 444.92857142857144], [320.0, 432.7333333333334], [322.0, 459.7692307692308], [323.0, 484.09756097560984], [324.0, 416.622641509434], [327.0, 473.30769230769226], [328.0, 414.2142857142857], [332.0, 424.8333333333333], [333.0, 419.0], [330.0, 396.8666666666666], [331.0, 282.5], [329.0, 426.7272727272727], [326.0, 399.88888888888897], [325.0, 449.4150943396226], [1.0, 280.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[247.49322916666668, 445.0145833333334]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 16332.0], [3.0, 16331.0], [4.0, 16067.0], [5.0, 18044.0], [6.0, 17886.0], [7.0, 16462.0], [8.0, 16306.0], [9.0, 18261.0], [10.0, 16030.0], [11.0, 18145.0], [12.0, 16232.0], [13.0, 18169.0], [14.0, 6167.0], [15.0, 2872.0], [16.0, 2851.0], [17.0, 2870.0], [18.0, 2854.0], [19.0, 9906.0], [20.0, 18300.0], [21.0, 2870.0], [22.0, 3119.0], [23.0, 13328.666666666668], [24.0, 2865.0], [25.0, 10820.0], [26.0, 2849.0], [27.0, 9933.0], [28.0, 9914.0], [29.0, 2865.0], [30.0, 10867.0], [31.0, 3125.0], [33.0, 18262.0], [32.0, 18319.0], [35.0, 25134.0], [34.0, 3661.0], [37.0, 3094.0], [36.0, 10822.0], [39.0, 8131.0], [38.0, 6742.5], [41.0, 18697.0], [40.0, 10577.5], [43.0, 3127.0], [42.0, 18493.0], [45.0, 3132.0], [44.0, 2863.0], [47.0, 21068.0], [46.0, 3130.0], [49.0, 10147.5], [48.0, 6754.5], [51.0, 2898.0], [50.0, 2878.0], [53.0, 3093.0], [52.0, 10566.0], [55.0, 6082.0], [54.0, 10957.5], [56.0, 3109.0], [59.0, 2853.0], [58.0, 14143.666666666666], [61.0, 3829.0], [60.0, 2850.0], [63.0, 2572.0], [62.0, 3163.0], [67.0, 2831.0], [66.0, 2835.0], [65.0, 10966.0], [64.0, 3096.0], [71.0, 2815.0], [70.0, 2802.0], [69.0, 2828.0], [68.0, 3105.0], [75.0, 3095.0], [74.0, 3095.0], [73.0, 2863.0], [72.0, 2807.0], [78.0, 2868.0], [77.0, 2847.0], [76.0, 10597.0], [83.0, 6250.0], [82.0, 2877.0], [81.0, 2585.0], [80.0, 2585.5], [87.0, 2579.0], [86.0, 2584.0], [85.0, 18738.5], [84.0, 6027.0], [91.0, 2576.0], [90.0, 2593.0], [89.0, 2576.5], [95.0, 2848.0], [94.0, 2822.0], [93.0, 2837.0], [92.0, 2581.0], [99.0, 2827.0], [98.0, 18357.0], [97.0, 2832.0], [96.0, 2845.0], [103.0, 2883.0], [102.0, 2829.0], [101.0, 2850.0], [100.0, 2851.0], [107.0, 18293.0], [106.0, 10926.0], [105.0, 2850.0], [104.0, 3150.0], [110.0, 1937.625], [111.0, 3252.0000000000005], [112.0, 1954.5833333333335], [113.0, 2016.5], [114.0, 2228.5], [115.0, 2469.0], [117.0, 1985.3333333333333], [118.0, 2742.5], [119.0, 2671.5], [116.0, 2821.0], [120.0, 2254.7000000000003], [121.0, 2614.285714285714], [122.0, 3009.0], [123.0, 3256.0], [124.0, 3494.25], [125.0, 8841.8], [126.0, 2690.75], [127.0, 1611.0], [129.0, 1442.0], [130.0, 1483.2], [134.0, 1463.3333333333335], [135.0, 1718.0], [133.0, 1359.6666666666665], [131.0, 1738.5], [128.0, 1600.5], [132.0, 2582.0], [143.0, 3113.0], [142.0, 2576.0], [141.0, 3122.0], [140.0, 2580.0], [139.0, 2823.0], [138.0, 2576.0], [137.0, 2824.0], [136.0, 2582.0], [151.0, 2810.0], [150.0, 2827.0], [149.0, 2819.0], [148.0, 10831.0], [147.0, 2838.0], [146.0, 2811.0], [145.0, 2833.0], [144.0, 2807.0], [159.0, 6901.25], [158.0, 3079.6], [157.0, 3086.0], [156.0, 2814.0], [155.0, 2879.0], [154.0, 2818.0], [153.0, 2835.0], [152.0, 2825.0], [166.0, 2937.428571428571], [165.0, 2910.6666666666665], [167.0, 2781.2], [164.0, 4533.444444444445], [163.0, 2975.0], [162.0, 3100.285714285714], [161.0, 2908.25], [160.0, 3018.428571428571], [175.0, 2673.5], [172.0, 4477.166666666666], [170.0, 5288.333333333334], [169.0, 4877.0], [168.0, 3058.4285714285716], [174.0, 2939.0], [173.0, 2873.0], [183.0, 2873.625], [182.0, 3011.8333333333335], [181.0, 3039.6666666666665], [179.0, 2727.0], [178.0, 2852.6], [177.0, 2916.3333333333335], [176.0, 2971.2], [180.0, 3125.75], [191.0, 2822.6666666666665], [189.0, 2861.833333333333], [188.0, 5493.0], [187.0, 3003.2], [186.0, 6352.2], [185.0, 2836.833333333333], [190.0, 3059.5], [184.0, 2583.0], [199.0, 2841.25], [197.0, 2901.6], [196.0, 3036.6], [195.0, 2904.4], [193.0, 2901.6666666666665], [192.0, 8199.666666666666], [198.0, 3165.0], [194.0, 2824.0], [200.0, 2946.75], [201.0, 3066.0], [203.0, 3124.4], [204.0, 3265.0], [205.0, 3256.3333333333335], [206.0, 3244.5], [207.0, 8499.666666666666], [209.0, 5492.0], [210.0, 8846.909090909092], [211.0, 3273.0], [214.0, 3047.6666666666665], [215.0, 2999.0], [213.0, 2611.0], [212.0, 7163.75], [208.0, 2822.0], [216.0, 4913.0], [218.0, 2890.5], [219.0, 2961.3333333333335], [221.0, 3021.5], [222.0, 3085.0], [223.0, 3056.0], [220.0, 3013.0], [217.0, 3044.5], [224.0, 2971.0], [225.0, 3592.0], [226.0, 3102.6666666666665], [227.0, 3512.8333333333335], [231.0, 3240.5714285714284], [230.0, 2586.0], [229.0, 18474.0], [228.0, 3061.5], [232.0, 3071.6666666666665], [233.0, 3174.25], [234.0, 2923.3333333333335], [235.0, 6950.25], [236.0, 3116.818181818182], [237.0, 3075.4615384615386], [238.0, 2932.727272727273], [239.0, 3063.375], [240.0, 3040.6666666666665], [241.0, 2818.5], [242.0, 2956.4], [243.0, 3012.416666666667], [244.0, 2909.7], [246.0, 3034.0], [247.0, 4098.928571428572], [245.0, 3046.7272727272725], [249.0, 2999.6666666666665], [248.0, 8125.666666666667], [252.0, 3073.5000000000005], [254.0, 2931.333333333333], [255.0, 3295.0625], [253.0, 3087.1666666666665], [251.0, 10681.0], [250.0, 10843.5], [257.0, 5691.818181818182], [256.0, 2847.7], [258.0, 4851.071428571428], [259.0, 4186.894736842104], [262.0, 2832.4], [263.0, 3234.818181818182], [264.0, 4631.25], [270.0, 4297.857142857143], [271.0, 6943.0], [268.0, 2967.5263157894738], [269.0, 3155.0], [266.0, 3017.0588235294113], [267.0, 3062.04347826087], [265.0, 4468.111111111111], [261.0, 3029.0], [260.0, 2968.7272727272725], [273.0, 2588.0], [272.0, 2949.5], [274.0, 2735.6666666666665], [278.0, 3217.7272727272725], [279.0, 2875.25], [277.0, 2993.4210526315787], [276.0, 3050.3333333333335], [275.0, 3160.375], [280.0, 2805.0], [286.0, 3148.4999999999995], [287.0, 4365.833333333334], [285.0, 3986.3333333333335], [284.0, 3181.5], [281.0, 3121.0], [282.0, 2738.3333333333335], [283.0, 3163.8], [289.0, 3020.0000000000005], [288.0, 2998.714285714286], [290.0, 4016.3333333333335], [291.0, 4235.833333333333], [292.0, 2927.0], [293.0, 6272.5], [294.0, 3759.9285714285716], [295.0, 3803.25], [296.0, 3389.866666666667], [303.0, 3043.8333333333335], [301.0, 3578.0454545454545], [300.0, 3474.8823529411766], [302.0, 2967.7599999999998], [297.0, 3000.571428571429], [298.0, 3796.8421052631584], [299.0, 3753.071428571429], [306.0, 3337.8800000000006], [307.0, 2992.3571428571427], [316.0, 3089.2], [317.0, 3075.172413793104], [318.0, 3015.0714285714284], [319.0, 2989.9166666666665], [309.0, 5594.75], [311.0, 3030.625], [313.0, 3299.6799999999994], [314.0, 3110.869565217391], [315.0, 3464.75], [312.0, 3065.0370370370374], [310.0, 4674.545454545454], [308.0, 3071.8], [305.0, 3019.6470588235297], [304.0, 3038.8823529411775], [321.0, 3495.928571428571], [320.0, 3473.266666666667], [322.0, 4239.692307692307], [323.0, 3731.5853658536585], [324.0, 2989.830188679244], [327.0, 4158.153846153846], [328.0, 3311.5714285714294], [332.0, 3005.833333333333], [333.0, 3043.5], [330.0, 4061.8666666666663], [331.0, 10337.5], [329.0, 3689.909090909091], [326.0, 3450.0000000000005], [325.0, 3059.509433962265], [1.0, 16422.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[247.49322916666668, 3780.884375000004]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 333.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 18432.0, "minX": 1.66724448E12, "maxY": 169589.76666666666, "series": [{"data": [[1.66724448E12, 169589.76666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66724448E12, 18432.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66724448E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 445.0145833333334, "minX": 1.66724448E12, "maxY": 3780.884375000004, "series": [{"data": [[1.66724448E12, 3335.56979166667]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.66724448E12, 445.0145833333334]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.66724448E12, 3780.884375000004]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66724448E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 444.9979166666666, "minX": 1.66724448E12, "maxY": 3334.518750000001, "series": [{"data": [[1.66724448E12, 3334.518750000001]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.66724448E12, 444.9979166666666]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.66724448E12, 444.9979166666666]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66724448E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 117.85104166666648, "minX": 1.66724448E12, "maxY": 158.36510416666636, "series": [{"data": [[1.66724448E12, 117.85104166666648]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.66724448E12, 158.36510416666636]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.66724448E12, 158.36510416666633]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66724448E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 273.0, "minX": 1.66724448E12, "maxY": 16462.0, "series": [{"data": [[1.66724448E12, 16462.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66724448E12, 654.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66724448E12, 2739.8900000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66724448E12, 1452.4999999999986]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66724448E12, 273.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66724448E12, 560.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66724448E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 280.5, "minX": 4.0, "maxY": 18032.5, "series": [{"data": [[36.0, 567.5], [39.0, 567.0], [38.0, 567.0], [4.0, 16093.0], [80.0, 591.5], [111.0, 560.0], [118.0, 553.5], [121.0, 284.0], [149.0, 556.0], [10.0, 16106.5], [175.0, 318.0], [189.0, 562.0], [198.0, 560.0], [12.0, 16104.5], [202.0, 560.5], [206.0, 557.0], [213.0, 558.0], [215.0, 557.5], [214.0, 280.5], [208.0, 282.0], [13.0, 565.0], [219.0, 556.0], [218.0, 558.0], [220.0, 558.5], [227.0, 553.0], [233.0, 558.0], [238.0, 559.0], [236.0, 557.5], [242.0, 557.5], [247.0, 296.0], [251.0, 1105.0], [252.0, 555.0], [282.0, 566.0], [17.0, 578.0], [19.0, 559.0], [21.0, 565.0], [29.0, 603.0], [31.0, 564.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[38.0, 9728.0], [4.0, 2871.0], [80.0, 2582.5], [111.0, 2826.0], [121.0, 2815.0], [149.0, 3034.0], [10.0, 18032.5], [175.0, 2749.5], [189.0, 2732.0], [198.0, 2736.0], [12.0, 17824.5], [202.0, 2722.0], [206.0, 2728.5], [213.0, 2739.0], [215.0, 2732.0], [214.0, 2815.0], [208.0, 2826.5], [13.0, 2999.5], [219.0, 2744.5], [218.0, 2726.5], [220.0, 2818.5], [227.0, 2731.0], [233.0, 2813.5], [238.0, 2728.5], [236.0, 2814.0], [242.0, 2783.0], [247.0, 2734.0], [252.0, 2810.5], [282.0, 2595.5], [17.0, 18006.0], [19.0, 2994.5], [21.0, 7841.5], [31.0, 3136.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 282.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 280.5, "minX": 4.0, "maxY": 9097.5, "series": [{"data": [[36.0, 567.5], [39.0, 567.0], [38.0, 567.0], [4.0, 8111.5], [80.0, 591.5], [111.0, 560.0], [118.0, 312.5], [121.0, 284.0], [149.0, 556.0], [10.0, 8014.0], [175.0, 318.0], [189.0, 562.0], [198.0, 560.0], [12.0, 8034.5], [202.0, 560.5], [206.0, 557.0], [213.0, 558.0], [215.0, 557.5], [214.0, 280.5], [208.0, 282.0], [13.0, 565.0], [219.0, 556.0], [218.0, 558.0], [220.0, 558.5], [227.0, 553.0], [233.0, 558.0], [238.0, 559.0], [236.0, 557.5], [242.0, 557.5], [247.0, 296.0], [251.0, 578.0], [252.0, 555.0], [282.0, 566.0], [17.0, 578.0], [19.0, 559.0], [21.0, 565.0], [29.0, 602.0], [31.0, 564.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[38.0, 1450.5], [4.0, 1430.5], [80.0, 1432.0], [111.0, 1431.0], [121.0, 1819.5], [149.0, 1544.0], [10.0, 9097.5], [175.0, 1485.0], [189.0, 1491.5], [198.0, 1447.0], [12.0, 8944.0], [202.0, 1443.5], [206.0, 1442.0], [213.0, 1444.0], [215.0, 1437.0], [214.0, 1433.0], [208.0, 1504.0], [13.0, 1440.0], [219.0, 1445.0], [218.0, 1440.5], [220.0, 1450.0], [227.0, 1435.0], [233.0, 1446.5], [238.0, 1434.0], [236.0, 1438.5], [242.0, 1449.0], [247.0, 1439.5], [252.0, 1441.5], [282.0, 1473.0], [17.0, 1827.0], [19.0, 1432.5], [21.0, 1441.0], [31.0, 1429.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 282.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 96.0, "minX": 1.66724448E12, "maxY": 96.0, "series": [{"data": [[1.66724448E12, 96.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66724448E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.6, "minX": 1.66724448E12, "maxY": 60.4, "series": [{"data": [[1.66724448E12, 3.6]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.66724448E12, 32.0]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.66724448E12, 60.4]], "isOverall": false, "label": "429", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66724448E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.8, "minX": 1.66724448E12, "maxY": 32.0, "series": [{"data": [[1.66724448E12, 1.8]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.66724448E12, 30.2]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.66724448E12, 32.0]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.66724448E12, 30.2]], "isOverall": false, "label": "HTTP Request-1-failure", "isController": false}, {"data": [[1.66724448E12, 1.8]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66724448E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 35.6, "minX": 1.66724448E12, "maxY": 60.4, "series": [{"data": [[1.66724448E12, 35.6]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.66724448E12, 60.4]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66724448E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

